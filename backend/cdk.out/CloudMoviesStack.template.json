{
 "Resources": {
  "videosTableBCC40D2B": {
   "Type": "AWS::DynamoDB::Table",
   "Properties": {
    "AttributeDefinitions": [
     {
      "AttributeName": "videoId",
      "AttributeType": "S"
     },
     {
      "AttributeName": "videoType",
      "AttributeType": "S"
     },
     {
      "AttributeName": "title",
      "AttributeType": "S"
     },
     {
      "AttributeName": "description",
      "AttributeType": "S"
     },
     {
      "AttributeName": "actors",
      "AttributeType": "S"
     },
     {
      "AttributeName": "directors",
      "AttributeType": "S"
     },
     {
      "AttributeName": "genres",
      "AttributeType": "S"
     }
    ],
    "GlobalSecondaryIndexes": [
     {
      "IndexName": "videoTypeIndex",
      "KeySchema": [
       {
        "AttributeName": "videoType",
        "KeyType": "HASH"
       }
      ],
      "Projection": {
       "ProjectionType": "ALL"
      },
      "ProvisionedThroughput": {
       "ReadCapacityUnits": 5,
       "WriteCapacityUnits": 5
      }
     },
     {
      "IndexName": "titleIndex",
      "KeySchema": [
       {
        "AttributeName": "title",
        "KeyType": "HASH"
       }
      ],
      "Projection": {
       "ProjectionType": "ALL"
      },
      "ProvisionedThroughput": {
       "ReadCapacityUnits": 5,
       "WriteCapacityUnits": 5
      }
     },
     {
      "IndexName": "descriptionIndex",
      "KeySchema": [
       {
        "AttributeName": "description",
        "KeyType": "HASH"
       }
      ],
      "Projection": {
       "ProjectionType": "ALL"
      },
      "ProvisionedThroughput": {
       "ReadCapacityUnits": 5,
       "WriteCapacityUnits": 5
      }
     },
     {
      "IndexName": "actorsIndex",
      "KeySchema": [
       {
        "AttributeName": "actors",
        "KeyType": "HASH"
       }
      ],
      "Projection": {
       "ProjectionType": "ALL"
      },
      "ProvisionedThroughput": {
       "ReadCapacityUnits": 5,
       "WriteCapacityUnits": 5
      }
     },
     {
      "IndexName": "directorsIndex",
      "KeySchema": [
       {
        "AttributeName": "directors",
        "KeyType": "HASH"
       }
      ],
      "Projection": {
       "ProjectionType": "ALL"
      },
      "ProvisionedThroughput": {
       "ReadCapacityUnits": 5,
       "WriteCapacityUnits": 5
      }
     },
     {
      "IndexName": "genresIndex",
      "KeySchema": [
       {
        "AttributeName": "genres",
        "KeyType": "HASH"
       }
      ],
      "Projection": {
       "ProjectionType": "ALL"
      },
      "ProvisionedThroughput": {
       "ReadCapacityUnits": 5,
       "WriteCapacityUnits": 5
      }
     }
    ],
    "KeySchema": [
     {
      "AttributeName": "videoId",
      "KeyType": "HASH"
     },
     {
      "AttributeName": "videoType",
      "KeyType": "RANGE"
     }
    ],
    "ProvisionedThroughput": {
     "ReadCapacityUnits": 5,
     "WriteCapacityUnits": 5
    },
    "StreamSpecification": {
     "StreamViewType": "NEW_AND_OLD_IMAGES"
    }
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "CloudMoviesStack/videosTable/Resource"
   }
  },
  "subscriptionsTable99FE4D04": {
   "Type": "AWS::DynamoDB::Table",
   "Properties": {
    "AttributeDefinitions": [
     {
      "AttributeName": "userId",
      "AttributeType": "S"
     },
     {
      "AttributeName": "subscriptionType",
      "AttributeType": "S"
     }
    ],
    "KeySchema": [
     {
      "AttributeName": "userId",
      "KeyType": "HASH"
     },
     {
      "AttributeName": "subscriptionType",
      "KeyType": "RANGE"
     }
    ],
    "ProvisionedThroughput": {
     "ReadCapacityUnits": 5,
     "WriteCapacityUnits": 5
    },
    "StreamSpecification": {
     "StreamViewType": "NEW_AND_OLD_IMAGES"
    }
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "CloudMoviesStack/subscriptionsTable/Resource"
   }
  },
  "ratingTable2AEECFA5": {
   "Type": "AWS::DynamoDB::Table",
   "Properties": {
    "AttributeDefinitions": [
     {
      "AttributeName": "userId",
      "AttributeType": "S"
     },
     {
      "AttributeName": "contentId",
      "AttributeType": "S"
     }
    ],
    "KeySchema": [
     {
      "AttributeName": "userId",
      "KeyType": "HASH"
     },
     {
      "AttributeName": "contentId",
      "KeyType": "RANGE"
     }
    ],
    "ProvisionedThroughput": {
     "ReadCapacityUnits": 5,
     "WriteCapacityUnits": 5
    },
    "StreamSpecification": {
     "StreamViewType": "NEW_AND_OLD_IMAGES"
    }
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "CloudMoviesStack/ratingTable/Resource"
   }
  },
  "feedsTable2B322F8D": {
   "Type": "AWS::DynamoDB::Table",
   "Properties": {
    "AttributeDefinitions": [
     {
      "AttributeName": "userId",
      "AttributeType": "S"
     }
    ],
    "KeySchema": [
     {
      "AttributeName": "userId",
      "KeyType": "HASH"
     }
    ],
    "ProvisionedThroughput": {
     "ReadCapacityUnits": 5,
     "WriteCapacityUnits": 5
    }
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "CloudMoviesStack/feedsTable/Resource"
   }
  },
  "sourceBucket5C83C9D6": {
   "Type": "AWS::S3::Bucket",
   "Properties": {
    "CorsConfiguration": {
     "CorsRules": [
      {
       "AllowedHeaders": [
        "*"
       ],
       "AllowedMethods": [
        "GET",
        "PUT",
        "POST",
        "DELETE",
        "HEAD"
       ],
       "AllowedOrigins": [
        "*"
       ]
      }
     ]
    },
    "Tags": [
     {
      "Key": "aws-cdk:auto-delete-objects",
      "Value": "true"
     }
    ]
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "CloudMoviesStack/sourceBucket/Resource"
   }
  },
  "sourceBucketPolicy092C54A0": {
   "Type": "AWS::S3::BucketPolicy",
   "Properties": {
    "Bucket": {
     "Ref": "sourceBucket5C83C9D6"
    },
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "s3:DeleteObject*",
        "s3:GetBucket*",
        "s3:List*",
        "s3:PutBucketPolicy"
       ],
       "Effect": "Allow",
       "Principal": {
        "AWS": {
         "Fn::GetAtt": [
          "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092",
          "Arn"
         ]
        }
       },
       "Resource": [
        {
         "Fn::GetAtt": [
          "sourceBucket5C83C9D6",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "sourceBucket5C83C9D6",
             "Arn"
            ]
           },
           "/*"
          ]
         ]
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    }
   },
   "Metadata": {
    "aws:cdk:path": "CloudMoviesStack/sourceBucket/Policy/Resource"
   }
  },
  "sourceBucketAutoDeleteObjectsCustomResource3D0E709A": {
   "Type": "Custom::S3AutoDeleteObjects",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "CustomS3AutoDeleteObjectsCustomResourceProviderHandler9D90184F",
      "Arn"
     ]
    },
    "BucketName": {
     "Ref": "sourceBucket5C83C9D6"
    }
   },
   "DependsOn": [
    "sourceBucketPolicy092C54A0"
   ],
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "CloudMoviesStack/sourceBucket/AutoDeleteObjectsCustomResource/Default"
   }
  },
  "sourceBucketNotificationsBE50106E": {
   "Type": "Custom::S3BucketNotifications",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "BucketNotificationsHandler050a0587b7544547bf325f094a3db8347ECC3691",
      "Arn"
     ]
    },
    "BucketName": {
     "Ref": "sourceBucket5C83C9D6"
    },
    "NotificationConfiguration": {
     "LambdaFunctionConfigurations": [
      {
       "Events": [
        "s3:ObjectCreated:*"
       ],
       "Filter": {
        "Key": {
         "FilterRules": [
          {
           "Name": "suffix",
           "Value": ".zip"
          }
         ]
        }
       },
       "LambdaFunctionArn": {
        "Fn::GetAtt": [
         "unzipvideolambdaLambda21A9B6C9",
         "Arn"
        ]
       }
      },
      {
       "Events": [
        "s3:ObjectCreated:*"
       ],
       "Filter": {
        "Key": {
         "FilterRules": [
          {
           "Name": "suffix",
           "Value": "mp4"
          }
         ]
        }
       },
       "LambdaFunctionArn": {
        "Fn::GetAtt": [
         "starttranscodinglambdaLambda5DD0E2FB",
         "Arn"
        ]
       }
      },
      {
       "Events": [
        "s3:ObjectCreated:*"
       ],
       "Filter": {
        "Key": {
         "FilterRules": [
          {
           "Name": "suffix",
           "Value": "mov"
          }
         ]
        }
       },
       "LambdaFunctionArn": {
        "Fn::GetAtt": [
         "starttranscodinglambdaLambda5DD0E2FB",
         "Arn"
        ]
       }
      },
      {
       "Events": [
        "s3:ObjectCreated:*"
       ],
       "Filter": {
        "Key": {
         "FilterRules": [
          {
           "Name": "suffix",
           "Value": "m4v"
          }
         ]
        }
       },
       "LambdaFunctionArn": {
        "Fn::GetAtt": [
         "starttranscodinglambdaLambda5DD0E2FB",
         "Arn"
        ]
       }
      }
     ]
    },
    "Managed": true
   },
   "DependsOn": [
    "sourceBucketAllowBucketNotificationsToCloudMoviesStackstarttranscodinglambdaLambdaC265D889906D2F50",
    "sourceBucketAllowBucketNotificationsToCloudMoviesStackunzipvideolambdaLambda3195A8053287CEBE",
    "sourceBucketPolicy092C54A0"
   ],
   "Metadata": {
    "aws:cdk:path": "CloudMoviesStack/sourceBucket/Notifications/Resource"
   }
  },
  "sourceBucketAllowBucketNotificationsToCloudMoviesStackunzipvideolambdaLambda3195A8053287CEBE": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "unzipvideolambdaLambda21A9B6C9",
      "Arn"
     ]
    },
    "Principal": "s3.amazonaws.com",
    "SourceAccount": {
     "Ref": "AWS::AccountId"
    },
    "SourceArn": {
     "Fn::GetAtt": [
      "sourceBucket5C83C9D6",
      "Arn"
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "CloudMoviesStack/sourceBucket/AllowBucketNotificationsToCloudMoviesStackunzipvideolambdaLambda3195A805"
   }
  },
  "sourceBucketAllowBucketNotificationsToCloudMoviesStackstarttranscodinglambdaLambdaC265D889906D2F50": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "starttranscodinglambdaLambda5DD0E2FB",
      "Arn"
     ]
    },
    "Principal": "s3.amazonaws.com",
    "SourceAccount": {
     "Ref": "AWS::AccountId"
    },
    "SourceArn": {
     "Fn::GetAtt": [
      "sourceBucket5C83C9D6",
      "Arn"
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "CloudMoviesStack/sourceBucket/AllowBucketNotificationsToCloudMoviesStackstarttranscodinglambdaLambdaC265D889"
   }
  },
  "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Version": "2012-10-17",
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ]
    },
    "ManagedPolicyArns": [
     {
      "Fn::Sub": "arn:${AWS::Partition}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "CloudMoviesStack/Custom::S3AutoDeleteObjectsCustomResourceProvider/Role"
   }
  },
  "CustomS3AutoDeleteObjectsCustomResourceProviderHandler9D90184F": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     "S3Key": "2eb6a831b107939f63cfebf68e6316e1a40f79fc99cae0fee9b333bac8d29bc4.zip"
    },
    "Timeout": 900,
    "MemorySize": 128,
    "Handler": "index.handler",
    "Role": {
     "Fn::GetAtt": [
      "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092",
      "Arn"
     ]
    },
    "Runtime": "nodejs18.x",
    "Description": {
     "Fn::Join": [
      "",
      [
       "Lambda function for auto-deleting objects in ",
       {
        "Ref": "sourceBucket5C83C9D6"
       },
       " S3 bucket."
      ]
     ]
    }
   },
   "DependsOn": [
    "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092"
   ],
   "Metadata": {
    "aws:cdk:path": "CloudMoviesStack/Custom::S3AutoDeleteObjectsCustomResourceProvider/Handler",
    "aws:asset:path": "asset.2eb6a831b107939f63cfebf68e6316e1a40f79fc99cae0fee9b333bac8d29bc4",
    "aws:asset:property": "Code"
   }
  },
  "publishBucketBD758787": {
   "Type": "AWS::S3::Bucket",
   "Properties": {
    "CorsConfiguration": {
     "CorsRules": [
      {
       "AllowedHeaders": [
        "*"
       ],
       "AllowedMethods": [
        "GET",
        "PUT",
        "POST",
        "DELETE",
        "HEAD"
       ],
       "AllowedOrigins": [
        "*"
       ]
      }
     ]
    },
    "Tags": [
     {
      "Key": "aws-cdk:auto-delete-objects",
      "Value": "true"
     }
    ]
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "CloudMoviesStack/publishBucket/Resource"
   }
  },
  "publishBucketPolicy5C827AF8": {
   "Type": "AWS::S3::BucketPolicy",
   "Properties": {
    "Bucket": {
     "Ref": "publishBucketBD758787"
    },
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "s3:DeleteObject*",
        "s3:GetBucket*",
        "s3:List*",
        "s3:PutBucketPolicy"
       ],
       "Effect": "Allow",
       "Principal": {
        "AWS": {
         "Fn::GetAtt": [
          "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092",
          "Arn"
         ]
        }
       },
       "Resource": [
        {
         "Fn::GetAtt": [
          "publishBucketBD758787",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "publishBucketBD758787",
             "Arn"
            ]
           },
           "/*"
          ]
         ]
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    }
   },
   "Metadata": {
    "aws:cdk:path": "CloudMoviesStack/publishBucket/Policy/Resource"
   }
  },
  "publishBucketAutoDeleteObjectsCustomResource33BC1DDE": {
   "Type": "Custom::S3AutoDeleteObjects",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "CustomS3AutoDeleteObjectsCustomResourceProviderHandler9D90184F",
      "Arn"
     ]
    },
    "BucketName": {
     "Ref": "publishBucketBD758787"
    }
   },
   "DependsOn": [
    "publishBucketPolicy5C827AF8"
   ],
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "CloudMoviesStack/publishBucket/AutoDeleteObjectsCustomResource/Default"
   }
  },
  "userEventFeedQueue35797794": {
   "Type": "AWS::SQS::Queue",
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "CloudMoviesStack/userEventFeedQueue/Resource"
   }
  },
  "publishEventFeedQueueF16A58E7": {
   "Type": "AWS::SQS::Queue",
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "CloudMoviesStack/publishEventFeedQueue/Resource"
   }
  },
  "publishEventFeedQueuePolicyFBD5BB13": {
   "Type": "AWS::SQS::QueuePolicy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": "sqs:SendMessage",
       "Condition": {
        "ArnEquals": {
         "aws:SourceArn": {
          "Ref": "videoPublishedTopic0F33FD9B"
         }
        }
       },
       "Effect": "Allow",
       "Principal": {
        "Service": "sns.amazonaws.com"
       },
       "Resource": {
        "Fn::GetAtt": [
         "publishEventFeedQueueF16A58E7",
         "Arn"
        ]
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "Queues": [
     {
      "Ref": "publishEventFeedQueueF16A58E7"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "CloudMoviesStack/publishEventFeedQueue/Policy/Resource"
   }
  },
  "publishEventFeedQueueCloudMoviesStackvideoPublishedTopic42F971A20CAF7478": {
   "Type": "AWS::SNS::Subscription",
   "Properties": {
    "Endpoint": {
     "Fn::GetAtt": [
      "publishEventFeedQueueF16A58E7",
      "Arn"
     ]
    },
    "Protocol": "sqs",
    "TopicArn": {
     "Ref": "videoPublishedTopic0F33FD9B"
    }
   },
   "DependsOn": [
    "publishEventFeedQueuePolicyFBD5BB13"
   ],
   "Metadata": {
    "aws:cdk:path": "CloudMoviesStack/publishEventFeedQueue/CloudMoviesStackvideoPublishedTopic42F971A2/Resource"
   }
  },
  "sourceUploadProcessingTopic119D2B2E": {
   "Type": "AWS::SNS::Topic",
   "Metadata": {
    "aws:cdk:path": "CloudMoviesStack/sourceUploadProcessingTopic/Resource"
   }
  },
  "sourceUploadProcessingTopicvukdimitrovgmailcom575A62D0": {
   "Type": "AWS::SNS::Subscription",
   "Properties": {
    "Endpoint": "vuk.dimitrov@gmail.com",
    "Protocol": "email",
    "TopicArn": {
     "Ref": "sourceUploadProcessingTopic119D2B2E"
    }
   },
   "Metadata": {
    "aws:cdk:path": "CloudMoviesStack/sourceUploadProcessingTopic/vuk.dimitrov@gmail.com/Resource"
   }
  },
  "videoPublishedTopic0F33FD9B": {
   "Type": "AWS::SNS::Topic",
   "Metadata": {
    "aws:cdk:path": "CloudMoviesStack/videoPublishedTopic/Resource"
   }
  },
  "registerConfirmationTopicEB93F8F5": {
   "Type": "AWS::SNS::Topic",
   "Metadata": {
    "aws:cdk:path": "CloudMoviesStack/registerConfirmationTopic/Resource"
   }
  },
  "utilsF6FC768D": {
   "Type": "AWS::Lambda::LayerVersion",
   "Properties": {
    "CompatibleRuntimes": [
     "python3.9"
    ],
    "Content": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     "S3Key": "ff73407ef2703512d1a4cfbc11cf5ae586bfe9872d9f84c4efa45903b1639a56.zip"
    }
   },
   "Metadata": {
    "aws:cdk:path": "CloudMoviesStack/utils/Resource",
    "aws:asset:path": "asset.ff73407ef2703512d1a4cfbc11cf5ae586bfe9872d9f84c4efa45903b1639a56",
    "aws:asset:is-bundled": true,
    "aws:asset:property": "Content"
   }
  },
  "attachRoleLambdaServiceRole58112395": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "CloudMoviesStack/attachRoleLambda/ServiceRole/Resource"
   }
  },
  "attachRoleLambda9405B926": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     "S3Key": "2b3a8b1de721ce767d3e420aee639e5a14f18f12cea553a51b94580eb4866a64.zip"
    },
    "Handler": "attach_role.handler",
    "MemorySize": 128,
    "Role": {
     "Fn::GetAtt": [
      "attachRoleLambdaServiceRole58112395",
      "Arn"
     ]
    },
    "Runtime": "python3.9",
    "Timeout": 10
   },
   "DependsOn": [
    "attachRoleLambdaServiceRole58112395"
   ],
   "Metadata": {
    "aws:cdk:path": "CloudMoviesStack/attachRoleLambda/Resource",
    "aws:asset:path": "asset.2b3a8b1de721ce767d3e420aee639e5a14f18f12cea553a51b94580eb4866a64",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Code"
   }
  },
  "attachRoleLambdaAllowInvokeCloudMoviesStackregisterConfirmationTopic946C1E0B3C58E64A": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "attachRoleLambda9405B926",
      "Arn"
     ]
    },
    "Principal": "sns.amazonaws.com",
    "SourceArn": {
     "Ref": "registerConfirmationTopicEB93F8F5"
    }
   },
   "Metadata": {
    "aws:cdk:path": "CloudMoviesStack/attachRoleLambda/AllowInvoke:CloudMoviesStackregisterConfirmationTopic946C1E0B"
   }
  },
  "attachRoleLambdaregisterConfirmationTopicA38533E5": {
   "Type": "AWS::SNS::Subscription",
   "Properties": {
    "Endpoint": {
     "Fn::GetAtt": [
      "attachRoleLambda9405B926",
      "Arn"
     ]
    },
    "Protocol": "lambda",
    "TopicArn": {
     "Ref": "registerConfirmationTopicEB93F8F5"
    }
   },
   "Metadata": {
    "aws:cdk:path": "CloudMoviesStack/attachRoleLambda/registerConfirmationTopic/Resource"
   }
  },
  "registrationConfirmationLambdaServiceRoleB93B9679": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "CloudMoviesStack/registrationConfirmationLambda/ServiceRole/Resource"
   }
  },
  "registrationConfirmationLambdaServiceRoleDefaultPolicyE4781B37": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": "sns:Publish",
       "Effect": "Allow",
       "Resource": {
        "Ref": "registerConfirmationTopicEB93F8F5"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "registrationConfirmationLambdaServiceRoleDefaultPolicyE4781B37",
    "Roles": [
     {
      "Ref": "registrationConfirmationLambdaServiceRoleB93B9679"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "CloudMoviesStack/registrationConfirmationLambda/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "registrationConfirmationLambda162FB2A4": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     "S3Key": "a00665444f4da6f8137c5c47ffdddebff4f098f18f08523bfc0ba228753238b8.zip"
    },
    "Environment": {
     "Variables": {
      "REGISTER_CONFIRMATION_TOPIC_ARN": {
       "Ref": "registerConfirmationTopicEB93F8F5"
      }
     }
    },
    "Handler": "registration_confirmation.handler",
    "MemorySize": 128,
    "Role": {
     "Fn::GetAtt": [
      "registrationConfirmationLambdaServiceRoleB93B9679",
      "Arn"
     ]
    },
    "Runtime": "python3.9",
    "Timeout": 10
   },
   "DependsOn": [
    "registrationConfirmationLambdaServiceRoleDefaultPolicyE4781B37",
    "registrationConfirmationLambdaServiceRoleB93B9679"
   ],
   "Metadata": {
    "aws:cdk:path": "CloudMoviesStack/registrationConfirmationLambda/Resource",
    "aws:asset:path": "asset.a00665444f4da6f8137c5c47ffdddebff4f098f18f08523bfc0ba228753238b8",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Code"
   }
  },
  "moviesUserPoolPostConfirmationCognitoBAAA0F5C": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "registrationConfirmationLambda162FB2A4",
      "Arn"
     ]
    },
    "Principal": "cognito-idp.amazonaws.com",
    "SourceArn": {
     "Fn::GetAtt": [
      "moviesUserPool80190EBD",
      "Arn"
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "CloudMoviesStack/moviesUserPool/PostConfirmationCognito"
   }
  },
  "moviesUserPool80190EBD": {
   "Type": "AWS::Cognito::UserPool",
   "Properties": {
    "AccountRecoverySetting": {
     "RecoveryMechanisms": [
      {
       "Name": "verified_phone_number",
       "Priority": 1
      },
      {
       "Name": "verified_email",
       "Priority": 2
      }
     ]
    },
    "AdminCreateUserConfig": {
     "AllowAdminCreateUserOnly": false
    },
    "AliasAttributes": [
     "email"
    ],
    "AutoVerifiedAttributes": [
     "email"
    ],
    "LambdaConfig": {
     "PostConfirmation": {
      "Fn::GetAtt": [
       "registrationConfirmationLambda162FB2A4",
       "Arn"
      ]
     }
    },
    "Schema": [
     {
      "Mutable": false,
      "Name": "birthdate",
      "Required": true
     },
     {
      "Mutable": false,
      "Name": "email",
      "Required": true
     },
     {
      "Mutable": false,
      "Name": "family_name",
      "Required": true
     },
     {
      "Mutable": false,
      "Name": "given_name",
      "Required": true
     }
    ],
    "SmsVerificationMessage": "The verification code to your new account is {####}",
    "UsernameConfiguration": {
     "CaseSensitive": false
    },
    "VerificationMessageTemplate": {
     "DefaultEmailOption": "CONFIRM_WITH_LINK",
     "EmailMessageByLink": "\n                Thank you for registering with Movies-app. To complete your registration, please verify your email address by clicking {##here##}. \n\n\n                If you did not register for Movies-app, please ignore this email.\n\n\n                Thank you,\n\n                Movies-app Team\n",
     "EmailSubjectByLink": "Verify Your Email Address for movies-app",
     "SmsMessage": "The verification code to your new account is {####}"
    }
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "CloudMoviesStack/moviesUserPool/Resource"
   }
  },
  "moviesUserPoolCognitoDomain3397781E": {
   "Type": "AWS::Cognito::UserPoolDomain",
   "Properties": {
    "Domain": "movies-app-123456789",
    "UserPoolId": {
     "Ref": "moviesUserPool80190EBD"
    }
   },
   "Metadata": {
    "aws:cdk:path": "CloudMoviesStack/moviesUserPool/CognitoDomain/Resource"
   }
  },
  "moviesUserPoolmoviesclientBBEF7921": {
   "Type": "AWS::Cognito::UserPoolClient",
   "Properties": {
    "AllowedOAuthFlows": [
     "code"
    ],
    "AllowedOAuthFlowsUserPoolClient": true,
    "AllowedOAuthScopes": [
     "openid"
    ],
    "CallbackURLs": [
     "https://example.com"
    ],
    "ExplicitAuthFlows": [
     "ALLOW_USER_PASSWORD_AUTH",
     "ALLOW_ADMIN_USER_PASSWORD_AUTH",
     "ALLOW_CUSTOM_AUTH",
     "ALLOW_USER_SRP_AUTH",
     "ALLOW_REFRESH_TOKEN_AUTH"
    ],
    "GenerateSecret": false,
    "SupportedIdentityProviders": [
     "COGNITO"
    ],
    "UserPoolId": {
     "Ref": "moviesUserPool80190EBD"
    }
   },
   "Metadata": {
    "aws:cdk:path": "CloudMoviesStack/moviesUserPool/movies-client/Resource"
   }
  },
  "UserRoleB7C3739B": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "cognito-idp.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/ReadOnlyAccess"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "CloudMoviesStack/UserRole/Resource"
   }
  },
  "AdminRole38563C57": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "cognito-idp.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/AdministratorAccess"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "CloudMoviesStack/AdminRole/Resource"
   }
  },
  "UserGroup": {
   "Type": "AWS::Cognito::UserPoolGroup",
   "Properties": {
    "GroupName": "User",
    "RoleArn": {
     "Fn::GetAtt": [
      "UserRoleB7C3739B",
      "Arn"
     ]
    },
    "UserPoolId": {
     "Ref": "moviesUserPool80190EBD"
    }
   },
   "Metadata": {
    "aws:cdk:path": "CloudMoviesStack/UserGroup"
   }
  },
  "AdminGroup": {
   "Type": "AWS::Cognito::UserPoolGroup",
   "Properties": {
    "GroupName": "Admin",
    "RoleArn": {
     "Fn::GetAtt": [
      "AdminRole38563C57",
      "Arn"
     ]
    },
    "UserPoolId": {
     "Ref": "moviesUserPool80190EBD"
    }
   },
   "Metadata": {
    "aws:cdk:path": "CloudMoviesStack/AdminGroup"
   }
  },
  "userpoolpolicy884146CA": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": "cognito-idp:AdminAddUserToGroup",
       "Effect": "Allow",
       "Resource": {
        "Fn::GetAtt": [
         "moviesUserPool80190EBD",
         "Arn"
        ]
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "userpoolpolicy884146CA",
    "Roles": [
     {
      "Ref": "attachRoleLambdaServiceRole58112395"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "CloudMoviesStack/userpool-policy/Resource"
   }
  },
  "uploadVideoLambdaServiceRoleC78E1897": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "CloudMoviesStack/uploadVideoLambda/ServiceRole/Resource"
   }
  },
  "uploadVideoLambdaServiceRoleDefaultPolicy23702A78": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "s3:Abort*",
        "s3:PutObject",
        "s3:PutObjectLegalHold",
        "s3:PutObjectRetention",
        "s3:PutObjectTagging",
        "s3:PutObjectVersionTagging"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::Join": [
         "",
         [
          {
           "Fn::GetAtt": [
            "sourceBucket5C83C9D6",
            "Arn"
           ]
          },
          "/*"
         ]
        ]
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "uploadVideoLambdaServiceRoleDefaultPolicy23702A78",
    "Roles": [
     {
      "Ref": "uploadVideoLambdaServiceRoleC78E1897"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "CloudMoviesStack/uploadVideoLambda/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "uploadVideoLambda44F7DE58": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     "S3Key": "fd6e1e28d7d751ccb4eac2d7f88c6310c47ae3a50dae131104321921184dc95e.zip"
    },
    "Environment": {
     "Variables": {
      "SOURCE_BUCKET": {
       "Ref": "sourceBucket5C83C9D6"
      }
     }
    },
    "Handler": "upload_video.handler",
    "MemorySize": 128,
    "Role": {
     "Fn::GetAtt": [
      "uploadVideoLambdaServiceRoleC78E1897",
      "Arn"
     ]
    },
    "Runtime": "python3.9",
    "Timeout": 10
   },
   "DependsOn": [
    "uploadVideoLambdaServiceRoleDefaultPolicy23702A78",
    "uploadVideoLambdaServiceRoleC78E1897"
   ],
   "Metadata": {
    "aws:cdk:path": "CloudMoviesStack/uploadVideoLambda/Resource",
    "aws:asset:path": "asset.fd6e1e28d7d751ccb4eac2d7f88c6310c47ae3a50dae131104321921184dc95e",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Code"
   }
  },
  "listVideosLambdaServiceRole92979127": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "CloudMoviesStack/listVideosLambda/ServiceRole/Resource"
   }
  },
  "listVideosLambdaServiceRoleDefaultPolicyA01EF08B": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "dynamodb:BatchGetItem",
        "dynamodb:ConditionCheckItem",
        "dynamodb:DescribeTable",
        "dynamodb:GetItem",
        "dynamodb:GetRecords",
        "dynamodb:GetShardIterator",
        "dynamodb:Query",
        "dynamodb:Scan"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "videosTableBCC40D2B",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "videosTableBCC40D2B",
             "Arn"
            ]
           },
           "/index/*"
          ]
         ]
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "listVideosLambdaServiceRoleDefaultPolicyA01EF08B",
    "Roles": [
     {
      "Ref": "listVideosLambdaServiceRole92979127"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "CloudMoviesStack/listVideosLambda/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "listVideosLambdaF00A0031": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     "S3Key": "12206a1f89e40bbf16b5b47343b89bb891316c3b391e19e31fe811a604547ff3.zip"
    },
    "Environment": {
     "Variables": {
      "VIDEOS_TABLE": {
       "Ref": "videosTableBCC40D2B"
      }
     }
    },
    "Handler": "list_videos.handler",
    "Layers": [
     {
      "Ref": "utilsF6FC768D"
     }
    ],
    "MemorySize": 128,
    "Role": {
     "Fn::GetAtt": [
      "listVideosLambdaServiceRole92979127",
      "Arn"
     ]
    },
    "Runtime": "python3.9",
    "Timeout": 10
   },
   "DependsOn": [
    "listVideosLambdaServiceRoleDefaultPolicyA01EF08B",
    "listVideosLambdaServiceRole92979127"
   ],
   "Metadata": {
    "aws:cdk:path": "CloudMoviesStack/listVideosLambda/Resource",
    "aws:asset:path": "asset.12206a1f89e40bbf16b5b47343b89bb891316c3b391e19e31fe811a604547ff3",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Code"
   }
  },
  "getDetailsLambdaServiceRoleDF82AAA5": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "CloudMoviesStack/getDetailsLambda/ServiceRole/Resource"
   }
  },
  "getDetailsLambdaServiceRoleDefaultPolicy979DDD3B": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "dynamodb:BatchGetItem",
        "dynamodb:ConditionCheckItem",
        "dynamodb:DescribeTable",
        "dynamodb:GetItem",
        "dynamodb:GetRecords",
        "dynamodb:GetShardIterator",
        "dynamodb:Query",
        "dynamodb:Scan"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "videosTableBCC40D2B",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "videosTableBCC40D2B",
             "Arn"
            ]
           },
           "/index/*"
          ]
         ]
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "getDetailsLambdaServiceRoleDefaultPolicy979DDD3B",
    "Roles": [
     {
      "Ref": "getDetailsLambdaServiceRoleDF82AAA5"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "CloudMoviesStack/getDetailsLambda/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "getDetailsLambdaD62CE019": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     "S3Key": "be919e4429c7a3a73cad378e546fc21ce5e1e93a8b9074264eaf8b5e2bcb991b.zip"
    },
    "Environment": {
     "Variables": {
      "VIDEOS_TABLE": {
       "Ref": "videosTableBCC40D2B"
      }
     }
    },
    "Handler": "get_details.handler",
    "Layers": [
     {
      "Ref": "utilsF6FC768D"
     }
    ],
    "MemorySize": 128,
    "Role": {
     "Fn::GetAtt": [
      "getDetailsLambdaServiceRoleDF82AAA5",
      "Arn"
     ]
    },
    "Runtime": "python3.9",
    "Timeout": 10
   },
   "DependsOn": [
    "getDetailsLambdaServiceRoleDefaultPolicy979DDD3B",
    "getDetailsLambdaServiceRoleDF82AAA5"
   ],
   "Metadata": {
    "aws:cdk:path": "CloudMoviesStack/getDetailsLambda/Resource",
    "aws:asset:path": "asset.be919e4429c7a3a73cad378e546fc21ce5e1e93a8b9074264eaf8b5e2bcb991b",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Code"
   }
  },
  "queryVideosLambdaServiceRole0DB98760": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "CloudMoviesStack/queryVideosLambda/ServiceRole/Resource"
   }
  },
  "queryVideosLambdaServiceRoleDefaultPolicy2D1CE32E": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "dynamodb:BatchGetItem",
        "dynamodb:ConditionCheckItem",
        "dynamodb:DescribeTable",
        "dynamodb:GetItem",
        "dynamodb:GetRecords",
        "dynamodb:GetShardIterator",
        "dynamodb:Query",
        "dynamodb:Scan"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "videosTableBCC40D2B",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "videosTableBCC40D2B",
             "Arn"
            ]
           },
           "/index/*"
          ]
         ]
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "queryVideosLambdaServiceRoleDefaultPolicy2D1CE32E",
    "Roles": [
     {
      "Ref": "queryVideosLambdaServiceRole0DB98760"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "CloudMoviesStack/queryVideosLambda/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "queryVideosLambda2A429330": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     "S3Key": "62b0c6ec6cbc6d44e3a867526dfd1a672305a277451d0a49c86ecfb7a448067d.zip"
    },
    "Environment": {
     "Variables": {
      "VIDEOS_TABLE": {
       "Ref": "videosTableBCC40D2B"
      }
     }
    },
    "Handler": "query_videos.handler",
    "MemorySize": 128,
    "Role": {
     "Fn::GetAtt": [
      "queryVideosLambdaServiceRole0DB98760",
      "Arn"
     ]
    },
    "Runtime": "python3.9",
    "Timeout": 10
   },
   "DependsOn": [
    "queryVideosLambdaServiceRoleDefaultPolicy2D1CE32E",
    "queryVideosLambdaServiceRole0DB98760"
   ],
   "Metadata": {
    "aws:cdk:path": "CloudMoviesStack/queryVideosLambda/Resource",
    "aws:asset:path": "asset.62b0c6ec6cbc6d44e3a867526dfd1a672305a277451d0a49c86ecfb7a448067d",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Code"
   }
  },
  "listSubscriptionsLambdaServiceRole5A82C907": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "CloudMoviesStack/listSubscriptionsLambda/ServiceRole/Resource"
   }
  },
  "listSubscriptionsLambdaServiceRoleDefaultPolicyD25BC66B": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "dynamodb:BatchGetItem",
        "dynamodb:ConditionCheckItem",
        "dynamodb:DescribeTable",
        "dynamodb:GetItem",
        "dynamodb:GetRecords",
        "dynamodb:GetShardIterator",
        "dynamodb:Query",
        "dynamodb:Scan"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "subscriptionsTable99FE4D04",
          "Arn"
         ]
        },
        {
         "Ref": "AWS::NoValue"
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "listSubscriptionsLambdaServiceRoleDefaultPolicyD25BC66B",
    "Roles": [
     {
      "Ref": "listSubscriptionsLambdaServiceRole5A82C907"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "CloudMoviesStack/listSubscriptionsLambda/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "listSubscriptionsLambdaCF1C4AF6": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     "S3Key": "073bd5bf1882f8c9568e970800bcfdb1912aaa10975697cb63fb1c1ec867331f.zip"
    },
    "Environment": {
     "Variables": {
      "SUBSCRIPTIONS_TABLE": {
       "Ref": "subscriptionsTable99FE4D04"
      }
     }
    },
    "Handler": "list_subscriptions.handler",
    "Layers": [
     {
      "Ref": "utilsF6FC768D"
     }
    ],
    "MemorySize": 128,
    "Role": {
     "Fn::GetAtt": [
      "listSubscriptionsLambdaServiceRole5A82C907",
      "Arn"
     ]
    },
    "Runtime": "python3.9",
    "Timeout": 10
   },
   "DependsOn": [
    "listSubscriptionsLambdaServiceRoleDefaultPolicyD25BC66B",
    "listSubscriptionsLambdaServiceRole5A82C907"
   ],
   "Metadata": {
    "aws:cdk:path": "CloudMoviesStack/listSubscriptionsLambda/Resource",
    "aws:asset:path": "asset.073bd5bf1882f8c9568e970800bcfdb1912aaa10975697cb63fb1c1ec867331f",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Code"
   }
  },
  "streamVideoLambdaServiceRoleAF490CE6": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "CloudMoviesStack/streamVideoLambda/ServiceRole/Resource"
   }
  },
  "streamVideoLambdaServiceRoleDefaultPolicyC99D1C9D": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "s3:GetBucket*",
        "s3:GetObject*",
        "s3:List*"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "publishBucketBD758787",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "publishBucketBD758787",
             "Arn"
            ]
           },
           "/*"
          ]
         ]
        }
       ]
      },
      {
       "Action": [
        "dynamodb:BatchGetItem",
        "dynamodb:ConditionCheckItem",
        "dynamodb:DescribeTable",
        "dynamodb:GetItem",
        "dynamodb:GetRecords",
        "dynamodb:GetShardIterator",
        "dynamodb:Query",
        "dynamodb:Scan"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "videosTableBCC40D2B",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "videosTableBCC40D2B",
             "Arn"
            ]
           },
           "/index/*"
          ]
         ]
        }
       ]
      },
      {
       "Action": "s3:*",
       "Effect": "Allow",
       "Resource": {
        "Fn::Join": [
         "",
         [
          {
           "Fn::GetAtt": [
            "publishBucketBD758787",
            "Arn"
           ]
          },
          "/*"
         ]
        ]
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "streamVideoLambdaServiceRoleDefaultPolicyC99D1C9D",
    "Roles": [
     {
      "Ref": "streamVideoLambdaServiceRoleAF490CE6"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "CloudMoviesStack/streamVideoLambda/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "streamVideoLambda51A0F66D": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     "S3Key": "9aacd4fe1bea11dbc2b106fba9fc238f53288e9f4ee34cde8ba981ffd1c299eb.zip"
    },
    "Environment": {
     "Variables": {
      "PUBLISH_BUCKET": {
       "Ref": "publishBucketBD758787"
      },
      "VIDEOS_TABLE": {
       "Ref": "videosTableBCC40D2B"
      }
     }
    },
    "Handler": "stream_video.handler",
    "Layers": [
     {
      "Ref": "utilsF6FC768D"
     }
    ],
    "MemorySize": 128,
    "Role": {
     "Fn::GetAtt": [
      "streamVideoLambdaServiceRoleAF490CE6",
      "Arn"
     ]
    },
    "Runtime": "python3.9",
    "Timeout": 10
   },
   "DependsOn": [
    "streamVideoLambdaServiceRoleDefaultPolicyC99D1C9D",
    "streamVideoLambdaServiceRoleAF490CE6"
   ],
   "Metadata": {
    "aws:cdk:path": "CloudMoviesStack/streamVideoLambda/Resource",
    "aws:asset:path": "asset.9aacd4fe1bea11dbc2b106fba9fc238f53288e9f4ee34cde8ba981ffd1c299eb",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Code"
   }
  },
  "subscribeLambdaServiceRoleB7F31258": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "CloudMoviesStack/subscribeLambda/ServiceRole/Resource"
   }
  },
  "subscribeLambdaServiceRoleDefaultPolicy768CD973": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "cognito-idp:ListUsers",
        "sns:*"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::GetAtt": [
         "moviesUserPool80190EBD",
         "Arn"
        ]
       }
      },
      {
       "Action": [
        "dynamodb:BatchGetItem",
        "dynamodb:BatchWriteItem",
        "dynamodb:ConditionCheckItem",
        "dynamodb:DeleteItem",
        "dynamodb:DescribeTable",
        "dynamodb:GetItem",
        "dynamodb:GetRecords",
        "dynamodb:GetShardIterator",
        "dynamodb:PutItem",
        "dynamodb:Query",
        "dynamodb:Scan",
        "dynamodb:UpdateItem"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "subscriptionsTable99FE4D04",
          "Arn"
         ]
        },
        {
         "Ref": "AWS::NoValue"
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "subscribeLambdaServiceRoleDefaultPolicy768CD973",
    "Roles": [
     {
      "Ref": "subscribeLambdaServiceRoleB7F31258"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "CloudMoviesStack/subscribeLambda/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "subscribeLambda023905A9": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     "S3Key": "4a5ebc4ae750fad37d268bede25ecce15555a1f98fd3c1b03d7c55d364843632.zip"
    },
    "Environment": {
     "Variables": {
      "SUBSCRIPTIONS_TABLE": {
       "Ref": "subscriptionsTable99FE4D04"
      },
      "USERPOOL_ID": {
       "Ref": "moviesUserPool80190EBD"
      }
     }
    },
    "Handler": "subscribe.handler",
    "Layers": [
     {
      "Ref": "utilsF6FC768D"
     }
    ],
    "MemorySize": 128,
    "Role": {
     "Fn::GetAtt": [
      "subscribeLambdaServiceRoleB7F31258",
      "Arn"
     ]
    },
    "Runtime": "python3.9",
    "Timeout": 10
   },
   "DependsOn": [
    "subscribeLambdaServiceRoleDefaultPolicy768CD973",
    "subscribeLambdaServiceRoleB7F31258"
   ],
   "Metadata": {
    "aws:cdk:path": "CloudMoviesStack/subscribeLambda/Resource",
    "aws:asset:path": "asset.4a5ebc4ae750fad37d268bede25ecce15555a1f98fd3c1b03d7c55d364843632",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Code"
   }
  },
  "unsubscribeLambdaServiceRoleC0968C63": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "CloudMoviesStack/unsubscribeLambda/ServiceRole/Resource"
   }
  },
  "unsubscribeLambdaServiceRoleDefaultPolicyB1977999": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "cognito-idp:ListUsers",
        "sns:*"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::GetAtt": [
         "moviesUserPool80190EBD",
         "Arn"
        ]
       }
      },
      {
       "Action": [
        "dynamodb:BatchGetItem",
        "dynamodb:BatchWriteItem",
        "dynamodb:ConditionCheckItem",
        "dynamodb:DeleteItem",
        "dynamodb:DescribeTable",
        "dynamodb:GetItem",
        "dynamodb:GetRecords",
        "dynamodb:GetShardIterator",
        "dynamodb:PutItem",
        "dynamodb:Query",
        "dynamodb:Scan",
        "dynamodb:UpdateItem"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "subscriptionsTable99FE4D04",
          "Arn"
         ]
        },
        {
         "Ref": "AWS::NoValue"
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "unsubscribeLambdaServiceRoleDefaultPolicyB1977999",
    "Roles": [
     {
      "Ref": "unsubscribeLambdaServiceRoleC0968C63"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "CloudMoviesStack/unsubscribeLambda/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "unsubscribeLambdaF210435A": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     "S3Key": "fcb1db1b8bc71bd25782781a00e39660f41ab76d77e50f1f8984f02469c5fd0e.zip"
    },
    "Environment": {
     "Variables": {
      "SUBSCRIPTIONS_TABLE": {
       "Ref": "subscriptionsTable99FE4D04"
      },
      "USERPOOL_ID": {
       "Ref": "moviesUserPool80190EBD"
      }
     }
    },
    "Handler": "unsubscribe.handler",
    "Layers": [
     {
      "Ref": "utilsF6FC768D"
     }
    ],
    "MemorySize": 128,
    "Role": {
     "Fn::GetAtt": [
      "unsubscribeLambdaServiceRoleC0968C63",
      "Arn"
     ]
    },
    "Runtime": "python3.9",
    "Timeout": 10
   },
   "DependsOn": [
    "unsubscribeLambdaServiceRoleDefaultPolicyB1977999",
    "unsubscribeLambdaServiceRoleC0968C63"
   ],
   "Metadata": {
    "aws:cdk:path": "CloudMoviesStack/unsubscribeLambda/Resource",
    "aws:asset:path": "asset.fcb1db1b8bc71bd25782781a00e39660f41ab76d77e50f1f8984f02469c5fd0e",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Code"
   }
  },
  "rateContentLambdaServiceRole6EE1E4B5": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "CloudMoviesStack/rateContentLambda/ServiceRole/Resource"
   }
  },
  "rateContentLambdaServiceRoleDefaultPolicyD43DE2F1": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "dynamodb:BatchGetItem",
        "dynamodb:BatchWriteItem",
        "dynamodb:ConditionCheckItem",
        "dynamodb:DeleteItem",
        "dynamodb:DescribeTable",
        "dynamodb:GetItem",
        "dynamodb:GetRecords",
        "dynamodb:GetShardIterator",
        "dynamodb:PutItem",
        "dynamodb:Query",
        "dynamodb:Scan",
        "dynamodb:UpdateItem"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "ratingTable2AEECFA5",
          "Arn"
         ]
        },
        {
         "Ref": "AWS::NoValue"
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "rateContentLambdaServiceRoleDefaultPolicyD43DE2F1",
    "Roles": [
     {
      "Ref": "rateContentLambdaServiceRole6EE1E4B5"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "CloudMoviesStack/rateContentLambda/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "rateContentLambdaF55611D1": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     "S3Key": "15c160a36aad223d224bca71d70698d3d84554e3797d54cfc43fea83e21e586b.zip"
    },
    "Environment": {
     "Variables": {
      "RATINGS_TABLE": {
       "Ref": "ratingTable2AEECFA5"
      }
     }
    },
    "Handler": "rate_content.handler",
    "Layers": [
     {
      "Ref": "utilsF6FC768D"
     }
    ],
    "MemorySize": 128,
    "Role": {
     "Fn::GetAtt": [
      "rateContentLambdaServiceRole6EE1E4B5",
      "Arn"
     ]
    },
    "Runtime": "python3.9",
    "Timeout": 10
   },
   "DependsOn": [
    "rateContentLambdaServiceRoleDefaultPolicyD43DE2F1",
    "rateContentLambdaServiceRole6EE1E4B5"
   ],
   "Metadata": {
    "aws:cdk:path": "CloudMoviesStack/rateContentLambda/Resource",
    "aws:asset:path": "asset.15c160a36aad223d224bca71d70698d3d84554e3797d54cfc43fea83e21e586b",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Code"
   }
  },
  "authorizerLambdaServiceRoleE6424CF1": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "CloudMoviesStack/authorizerLambda/ServiceRole/Resource"
   }
  },
  "authorizerLambda867A4044": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     "S3Key": "ac2c7130f51e29417729b4a40344d88312e91ae9050fa9cb20a536ba3fbe5161.zip"
    },
    "Environment": {
     "Variables": {
      "REGION": {
       "Ref": "AWS::Region"
      },
      "USER_POOL_ID": {
       "Ref": "moviesUserPool80190EBD"
      },
      "COGNITO_CLIENT_ID": {
       "Ref": "moviesUserPoolmoviesclientBBEF7921"
      }
     }
    },
    "Handler": "authorizer.handler",
    "MemorySize": 128,
    "Role": {
     "Fn::GetAtt": [
      "authorizerLambdaServiceRoleE6424CF1",
      "Arn"
     ]
    },
    "Runtime": "python3.9",
    "Timeout": 10
   },
   "DependsOn": [
    "authorizerLambdaServiceRoleE6424CF1"
   ],
   "Metadata": {
    "aws:cdk:path": "CloudMoviesStack/authorizerLambda/Resource",
    "aws:asset:path": "asset.ac2c7130f51e29417729b4a40344d88312e91ae9050fa9cb20a536ba3fbe5161",
    "aws:asset:is-bundled": true,
    "aws:asset:property": "Code"
   }
  },
  "authorizerLambdaCloudMoviesStackCustomAuthorizer014FF649Permissions66E0301B": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "authorizerLambda867A4044",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "moviesApi63300285"
       },
       "/authorizers/",
       {
        "Ref": "CustomAuthorizerC8102921"
       }
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "CloudMoviesStack/authorizerLambda/CloudMoviesStackCustomAuthorizer014FF649:Permissions"
   }
  },
  "CustomAuthorizerC8102921": {
   "Type": "AWS::ApiGateway::Authorizer",
   "Properties": {
    "AuthorizerResultTtlInSeconds": 0,
    "AuthorizerUri": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Fn::Select": [
         1,
         {
          "Fn::Split": [
           ":",
           {
            "Fn::GetAtt": [
             "authorizerLambda867A4044",
             "Arn"
            ]
           }
          ]
         }
        ]
       },
       ":apigateway:",
       {
        "Fn::Select": [
         3,
         {
          "Fn::Split": [
           ":",
           {
            "Fn::GetAtt": [
             "authorizerLambda867A4044",
             "Arn"
            ]
           }
          ]
         }
        ]
       },
       ":lambda:path/2015-03-31/functions/",
       {
        "Fn::GetAtt": [
         "authorizerLambda867A4044",
         "Arn"
        ]
       },
       "/invocations"
      ]
     ]
    },
    "IdentitySource": "method.request.header.Authorization",
    "Name": "CloudMoviesStackCustomAuthorizer014FF649",
    "RestApiId": {
     "Ref": "moviesApi63300285"
    },
    "Type": "TOKEN"
   },
   "Metadata": {
    "aws:cdk:path": "CloudMoviesStack/CustomAuthorizer/Resource"
   }
  },
  "moviesApi63300285": {
   "Type": "AWS::ApiGateway::RestApi",
   "Properties": {
    "Name": "moviesApi"
   },
   "Metadata": {
    "aws:cdk:path": "CloudMoviesStack/moviesApi/Resource"
   }
  },
  "moviesApiDeployment2C689B8Cfdd83208b66299a3b7bc17aba2257e86": {
   "Type": "AWS::ApiGateway::Deployment",
   "Properties": {
    "Description": "Automatically created by the RestApi construct",
    "RestApiId": {
     "Ref": "moviesApi63300285"
    }
   },
   "DependsOn": [
    "CustomAuthorizerC8102921",
    "moviesApicontentvideoIdGET16F8963E",
    "moviesApicontentvideoIdOPTIONSC3771E6C",
    "moviesApicontentvideoIdPUTA295938E",
    "moviesApicontentvideoIdEB6344FD",
    "moviesApicontentfeeduserIdGETC9727A17",
    "moviesApicontentfeeduserIdOPTIONS7B673E4C",
    "moviesApicontentfeeduserIdF81C250F",
    "moviesApicontentfeedOPTIONS65008C07",
    "moviesApicontentfeedA21E8C27",
    "moviesApicontentGET45941E6B",
    "moviesApicontentOPTIONS49E5F010",
    "moviesApicontentFB0723DA",
    "moviesApimoviemovieIdDELETE0CC0352C",
    "moviesApimoviemovieIdOPTIONSDF54B39E",
    "moviesApimoviemovieId8EABDBED",
    "moviesApimovieOPTIONS5149EE45",
    "moviesApimovieB0D0B90A",
    "moviesApiOPTIONSA28FEEA1",
    "moviesApiratingsuseridOPTIONS613B05F6",
    "moviesApiratingsuseridPOST8285EFF5",
    "moviesApiratingsuserid66DBEAA9",
    "moviesApiratingsOPTIONSC4C4341C",
    "moviesApiratings8810C690",
    "moviesApishowshowIdseasonepisodeDELETE2E623C0C",
    "moviesApishowshowIdseasonepisodeGET0EA1C64D",
    "moviesApishowshowIdseasonepisodeOPTIONS77EAF564",
    "moviesApishowshowIdseasonepisodeBFC2346E",
    "moviesApishowshowIdseasonDELETEC74342C9",
    "moviesApishowshowIdseasonOPTIONS5848F796",
    "moviesApishowshowIdseasonPUTF9DE7D68",
    "moviesApishowshowIdseasonDF459793",
    "moviesApishowshowIdDELETEC7CF0ABD",
    "moviesApishowshowIdOPTIONSA5394DEA",
    "moviesApishowshowIdPOSTDD9DFD39",
    "moviesApishowshowIdD94F986F",
    "moviesApishowshowIdseasonDetailsGETB28C49BB",
    "moviesApishowshowIdseasonDetailsOPTIONSE52E8D4B",
    "moviesApishowshowIdseasonDetailsE1041397",
    "moviesApishowOPTIONS714FED4C",
    "moviesApishowPOST1BE1664D",
    "moviesApishowA3270F35",
    "moviesApisubscriptionuserIdtypenameDELETEDA8B2FCB",
    "moviesApisubscriptionuserIdtypenameOPTIONS1884F479",
    "moviesApisubscriptionuserIdtypename702EFD8F",
    "moviesApisubscriptionuserIdtypeOPTIONS4CE01002",
    "moviesApisubscriptionuserIdtype845CD63B",
    "moviesApisubscriptionuserIdGETA718A030",
    "moviesApisubscriptionuserIdOPTIONS1C7FDA72",
    "moviesApisubscriptionuserIdPOSTE900F3E2",
    "moviesApisubscriptionuserIdF4B7986A",
    "moviesApisubscriptionOPTIONS08D493E4",
    "moviesApisubscription33C4F466",
    "moviesApiuploadGET869EC398",
    "moviesApiuploadOPTIONSD1729757",
    "moviesApiupload4C057A87",
    "moviesApivideovideoIdresolutionGET7CB14CD9",
    "moviesApivideovideoIdresolutionOPTIONS92D30042",
    "moviesApivideovideoIdresolutionDE703279",
    "moviesApivideovideoIdOPTIONS50EB454C",
    "moviesApivideovideoId4A6DD8E6",
    "moviesApivideoOPTIONS009A17A7",
    "moviesApivideoqueryqueryGETEB3ACAB9",
    "moviesApivideoqueryqueryOPTIONS70F6377A",
    "moviesApivideoqueryquery639BAB39",
    "moviesApivideoqueryOPTIONS21E9C661",
    "moviesApivideoquery940AF055",
    "moviesApivideo4B32D44F"
   ],
   "Metadata": {
    "aws:cdk:path": "CloudMoviesStack/moviesApi/Deployment/Resource"
   }
  },
  "moviesApiDeploymentStageprod986CD890": {
   "Type": "AWS::ApiGateway::Stage",
   "Properties": {
    "DeploymentId": {
     "Ref": "moviesApiDeployment2C689B8Cfdd83208b66299a3b7bc17aba2257e86"
    },
    "RestApiId": {
     "Ref": "moviesApi63300285"
    },
    "StageName": "prod"
   },
   "Metadata": {
    "aws:cdk:path": "CloudMoviesStack/moviesApi/DeploymentStage.prod/Resource"
   }
  },
  "moviesApiOPTIONSA28FEEA1": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "ApiKeyRequired": false,
    "AuthorizationType": "NONE",
    "HttpMethod": "OPTIONS",
    "Integration": {
     "IntegrationResponses": [
      {
       "ResponseParameters": {
        "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'",
        "method.response.header.Access-Control-Allow-Origin": "'*'",
        "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'"
       },
       "StatusCode": "204"
      }
     ],
     "RequestTemplates": {
      "application/json": "{ statusCode: 200 }"
     },
     "Type": "MOCK"
    },
    "MethodResponses": [
     {
      "ResponseParameters": {
       "method.response.header.Access-Control-Allow-Headers": true,
       "method.response.header.Access-Control-Allow-Origin": true,
       "method.response.header.Access-Control-Allow-Methods": true
      },
      "StatusCode": "204"
     }
    ],
    "ResourceId": {
     "Fn::GetAtt": [
      "moviesApi63300285",
      "RootResourceId"
     ]
    },
    "RestApiId": {
     "Ref": "moviesApi63300285"
    }
   },
   "Metadata": {
    "aws:cdk:path": "CloudMoviesStack/moviesApi/Default/OPTIONS/Resource"
   }
  },
  "moviesApicontentFB0723DA": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Fn::GetAtt": [
      "moviesApi63300285",
      "RootResourceId"
     ]
    },
    "PathPart": "content",
    "RestApiId": {
     "Ref": "moviesApi63300285"
    }
   },
   "Metadata": {
    "aws:cdk:path": "CloudMoviesStack/moviesApi/Default/content/Resource"
   }
  },
  "moviesApicontentOPTIONS49E5F010": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "ApiKeyRequired": false,
    "AuthorizationType": "NONE",
    "HttpMethod": "OPTIONS",
    "Integration": {
     "IntegrationResponses": [
      {
       "ResponseParameters": {
        "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'",
        "method.response.header.Access-Control-Allow-Origin": "'*'",
        "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'"
       },
       "StatusCode": "204"
      }
     ],
     "RequestTemplates": {
      "application/json": "{ statusCode: 200 }"
     },
     "Type": "MOCK"
    },
    "MethodResponses": [
     {
      "ResponseParameters": {
       "method.response.header.Access-Control-Allow-Headers": true,
       "method.response.header.Access-Control-Allow-Origin": true,
       "method.response.header.Access-Control-Allow-Methods": true
      },
      "StatusCode": "204"
     }
    ],
    "ResourceId": {
     "Ref": "moviesApicontentFB0723DA"
    },
    "RestApiId": {
     "Ref": "moviesApi63300285"
    }
   },
   "Metadata": {
    "aws:cdk:path": "CloudMoviesStack/moviesApi/Default/content/OPTIONS/Resource"
   }
  },
  "moviesApicontentGETApiPermissionCloudMoviesStackmoviesApi4BD0D74DGETcontent04A9822A": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "listVideosLambdaF00A0031",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "moviesApi63300285"
       },
       "/",
       {
        "Ref": "moviesApiDeploymentStageprod986CD890"
       },
       "/GET/content"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "CloudMoviesStack/moviesApi/Default/content/GET/ApiPermission.CloudMoviesStackmoviesApi4BD0D74D.GET..content"
   }
  },
  "moviesApicontentGETApiPermissionTestCloudMoviesStackmoviesApi4BD0D74DGETcontent27DA39B2": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "listVideosLambdaF00A0031",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "moviesApi63300285"
       },
       "/test-invoke-stage/GET/content"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "CloudMoviesStack/moviesApi/Default/content/GET/ApiPermission.Test.CloudMoviesStackmoviesApi4BD0D74D.GET..content"
   }
  },
  "moviesApicontentGET45941E6B": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "AuthorizationType": "CUSTOM",
    "AuthorizerId": {
     "Ref": "CustomAuthorizerC8102921"
    },
    "HttpMethod": "GET",
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":apigateway:",
        {
         "Ref": "AWS::Region"
        },
        ":lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "listVideosLambdaF00A0031",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    },
    "ResourceId": {
     "Ref": "moviesApicontentFB0723DA"
    },
    "RestApiId": {
     "Ref": "moviesApi63300285"
    }
   },
   "Metadata": {
    "aws:cdk:path": "CloudMoviesStack/moviesApi/Default/content/GET/Resource"
   }
  },
  "moviesApicontentvideoIdEB6344FD": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Ref": "moviesApicontentFB0723DA"
    },
    "PathPart": "{videoId}",
    "RestApiId": {
     "Ref": "moviesApi63300285"
    }
   },
   "Metadata": {
    "aws:cdk:path": "CloudMoviesStack/moviesApi/Default/content/{videoId}/Resource"
   }
  },
  "moviesApicontentvideoIdOPTIONSC3771E6C": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "ApiKeyRequired": false,
    "AuthorizationType": "NONE",
    "HttpMethod": "OPTIONS",
    "Integration": {
     "IntegrationResponses": [
      {
       "ResponseParameters": {
        "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'",
        "method.response.header.Access-Control-Allow-Origin": "'*'",
        "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'"
       },
       "StatusCode": "204"
      }
     ],
     "RequestTemplates": {
      "application/json": "{ statusCode: 200 }"
     },
     "Type": "MOCK"
    },
    "MethodResponses": [
     {
      "ResponseParameters": {
       "method.response.header.Access-Control-Allow-Headers": true,
       "method.response.header.Access-Control-Allow-Origin": true,
       "method.response.header.Access-Control-Allow-Methods": true
      },
      "StatusCode": "204"
     }
    ],
    "ResourceId": {
     "Ref": "moviesApicontentvideoIdEB6344FD"
    },
    "RestApiId": {
     "Ref": "moviesApi63300285"
    }
   },
   "Metadata": {
    "aws:cdk:path": "CloudMoviesStack/moviesApi/Default/content/{videoId}/OPTIONS/Resource"
   }
  },
  "moviesApicontentvideoIdGETApiPermissionCloudMoviesStackmoviesApi4BD0D74DGETcontentvideoIdDC2DF3EF": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "getDetailsLambdaD62CE019",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "moviesApi63300285"
       },
       "/",
       {
        "Ref": "moviesApiDeploymentStageprod986CD890"
       },
       "/GET/content/*"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "CloudMoviesStack/moviesApi/Default/content/{videoId}/GET/ApiPermission.CloudMoviesStackmoviesApi4BD0D74D.GET..content.{videoId}"
   }
  },
  "moviesApicontentvideoIdGETApiPermissionTestCloudMoviesStackmoviesApi4BD0D74DGETcontentvideoId3EC4C688": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "getDetailsLambdaD62CE019",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "moviesApi63300285"
       },
       "/test-invoke-stage/GET/content/*"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "CloudMoviesStack/moviesApi/Default/content/{videoId}/GET/ApiPermission.Test.CloudMoviesStackmoviesApi4BD0D74D.GET..content.{videoId}"
   }
  },
  "moviesApicontentvideoIdGET16F8963E": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "AuthorizationType": "CUSTOM",
    "AuthorizerId": {
     "Ref": "CustomAuthorizerC8102921"
    },
    "HttpMethod": "GET",
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":apigateway:",
        {
         "Ref": "AWS::Region"
        },
        ":lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "getDetailsLambdaD62CE019",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    },
    "ResourceId": {
     "Ref": "moviesApicontentvideoIdEB6344FD"
    },
    "RestApiId": {
     "Ref": "moviesApi63300285"
    }
   },
   "Metadata": {
    "aws:cdk:path": "CloudMoviesStack/moviesApi/Default/content/{videoId}/GET/Resource"
   }
  },
  "moviesApicontentvideoIdPUTApiPermissionCloudMoviesStackmoviesApi4BD0D74DPUTcontentvideoId4463EC20": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "editDetailsLambda56648A07",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "moviesApi63300285"
       },
       "/",
       {
        "Ref": "moviesApiDeploymentStageprod986CD890"
       },
       "/PUT/content/*"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "CloudMoviesStack/moviesApi/Default/content/{videoId}/PUT/ApiPermission.CloudMoviesStackmoviesApi4BD0D74D.PUT..content.{videoId}"
   }
  },
  "moviesApicontentvideoIdPUTApiPermissionTestCloudMoviesStackmoviesApi4BD0D74DPUTcontentvideoId07C18289": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "editDetailsLambda56648A07",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "moviesApi63300285"
       },
       "/test-invoke-stage/PUT/content/*"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "CloudMoviesStack/moviesApi/Default/content/{videoId}/PUT/ApiPermission.Test.CloudMoviesStackmoviesApi4BD0D74D.PUT..content.{videoId}"
   }
  },
  "moviesApicontentvideoIdPUTA295938E": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "AuthorizationType": "CUSTOM",
    "AuthorizerId": {
     "Ref": "CustomAuthorizerC8102921"
    },
    "HttpMethod": "PUT",
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":apigateway:",
        {
         "Ref": "AWS::Region"
        },
        ":lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "editDetailsLambda56648A07",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    },
    "ResourceId": {
     "Ref": "moviesApicontentvideoIdEB6344FD"
    },
    "RestApiId": {
     "Ref": "moviesApi63300285"
    }
   },
   "Metadata": {
    "aws:cdk:path": "CloudMoviesStack/moviesApi/Default/content/{videoId}/PUT/Resource"
   }
  },
  "moviesApicontentfeedA21E8C27": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Ref": "moviesApicontentFB0723DA"
    },
    "PathPart": "feed",
    "RestApiId": {
     "Ref": "moviesApi63300285"
    }
   },
   "Metadata": {
    "aws:cdk:path": "CloudMoviesStack/moviesApi/Default/content/feed/Resource"
   }
  },
  "moviesApicontentfeedOPTIONS65008C07": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "ApiKeyRequired": false,
    "AuthorizationType": "NONE",
    "HttpMethod": "OPTIONS",
    "Integration": {
     "IntegrationResponses": [
      {
       "ResponseParameters": {
        "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'",
        "method.response.header.Access-Control-Allow-Origin": "'*'",
        "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'"
       },
       "StatusCode": "204"
      }
     ],
     "RequestTemplates": {
      "application/json": "{ statusCode: 200 }"
     },
     "Type": "MOCK"
    },
    "MethodResponses": [
     {
      "ResponseParameters": {
       "method.response.header.Access-Control-Allow-Headers": true,
       "method.response.header.Access-Control-Allow-Origin": true,
       "method.response.header.Access-Control-Allow-Methods": true
      },
      "StatusCode": "204"
     }
    ],
    "ResourceId": {
     "Ref": "moviesApicontentfeedA21E8C27"
    },
    "RestApiId": {
     "Ref": "moviesApi63300285"
    }
   },
   "Metadata": {
    "aws:cdk:path": "CloudMoviesStack/moviesApi/Default/content/feed/OPTIONS/Resource"
   }
  },
  "moviesApicontentfeeduserIdF81C250F": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Ref": "moviesApicontentfeedA21E8C27"
    },
    "PathPart": "{userId}",
    "RestApiId": {
     "Ref": "moviesApi63300285"
    }
   },
   "Metadata": {
    "aws:cdk:path": "CloudMoviesStack/moviesApi/Default/content/feed/{userId}/Resource"
   }
  },
  "moviesApicontentfeeduserIdOPTIONS7B673E4C": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "ApiKeyRequired": false,
    "AuthorizationType": "NONE",
    "HttpMethod": "OPTIONS",
    "Integration": {
     "IntegrationResponses": [
      {
       "ResponseParameters": {
        "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'",
        "method.response.header.Access-Control-Allow-Origin": "'*'",
        "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'"
       },
       "StatusCode": "204"
      }
     ],
     "RequestTemplates": {
      "application/json": "{ statusCode: 200 }"
     },
     "Type": "MOCK"
    },
    "MethodResponses": [
     {
      "ResponseParameters": {
       "method.response.header.Access-Control-Allow-Headers": true,
       "method.response.header.Access-Control-Allow-Origin": true,
       "method.response.header.Access-Control-Allow-Methods": true
      },
      "StatusCode": "204"
     }
    ],
    "ResourceId": {
     "Ref": "moviesApicontentfeeduserIdF81C250F"
    },
    "RestApiId": {
     "Ref": "moviesApi63300285"
    }
   },
   "Metadata": {
    "aws:cdk:path": "CloudMoviesStack/moviesApi/Default/content/feed/{userId}/OPTIONS/Resource"
   }
  },
  "moviesApicontentfeeduserIdGETApiPermissionCloudMoviesStackmoviesApi4BD0D74DGETcontentfeeduserIdFE5E91D8": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "getFeedLambdaB4EE3C95",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "moviesApi63300285"
       },
       "/",
       {
        "Ref": "moviesApiDeploymentStageprod986CD890"
       },
       "/GET/content/feed/*"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "CloudMoviesStack/moviesApi/Default/content/feed/{userId}/GET/ApiPermission.CloudMoviesStackmoviesApi4BD0D74D.GET..content.feed.{userId}"
   }
  },
  "moviesApicontentfeeduserIdGETApiPermissionTestCloudMoviesStackmoviesApi4BD0D74DGETcontentfeeduserId013FACD7": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "getFeedLambdaB4EE3C95",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "moviesApi63300285"
       },
       "/test-invoke-stage/GET/content/feed/*"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "CloudMoviesStack/moviesApi/Default/content/feed/{userId}/GET/ApiPermission.Test.CloudMoviesStackmoviesApi4BD0D74D.GET..content.feed.{userId}"
   }
  },
  "moviesApicontentfeeduserIdGETC9727A17": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "AuthorizationType": "CUSTOM",
    "AuthorizerId": {
     "Ref": "CustomAuthorizerC8102921"
    },
    "HttpMethod": "GET",
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":apigateway:",
        {
         "Ref": "AWS::Region"
        },
        ":lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "getFeedLambdaB4EE3C95",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    },
    "ResourceId": {
     "Ref": "moviesApicontentfeeduserIdF81C250F"
    },
    "RestApiId": {
     "Ref": "moviesApi63300285"
    }
   },
   "Metadata": {
    "aws:cdk:path": "CloudMoviesStack/moviesApi/Default/content/feed/{userId}/GET/Resource"
   }
  },
  "moviesApivideo4B32D44F": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Fn::GetAtt": [
      "moviesApi63300285",
      "RootResourceId"
     ]
    },
    "PathPart": "video",
    "RestApiId": {
     "Ref": "moviesApi63300285"
    }
   },
   "Metadata": {
    "aws:cdk:path": "CloudMoviesStack/moviesApi/Default/video/Resource"
   }
  },
  "moviesApivideoOPTIONS009A17A7": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "ApiKeyRequired": false,
    "AuthorizationType": "NONE",
    "HttpMethod": "OPTIONS",
    "Integration": {
     "IntegrationResponses": [
      {
       "ResponseParameters": {
        "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'",
        "method.response.header.Access-Control-Allow-Origin": "'*'",
        "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'"
       },
       "StatusCode": "204"
      }
     ],
     "RequestTemplates": {
      "application/json": "{ statusCode: 200 }"
     },
     "Type": "MOCK"
    },
    "MethodResponses": [
     {
      "ResponseParameters": {
       "method.response.header.Access-Control-Allow-Headers": true,
       "method.response.header.Access-Control-Allow-Origin": true,
       "method.response.header.Access-Control-Allow-Methods": true
      },
      "StatusCode": "204"
     }
    ],
    "ResourceId": {
     "Ref": "moviesApivideo4B32D44F"
    },
    "RestApiId": {
     "Ref": "moviesApi63300285"
    }
   },
   "Metadata": {
    "aws:cdk:path": "CloudMoviesStack/moviesApi/Default/video/OPTIONS/Resource"
   }
  },
  "moviesApivideoquery940AF055": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Ref": "moviesApivideo4B32D44F"
    },
    "PathPart": "query",
    "RestApiId": {
     "Ref": "moviesApi63300285"
    }
   },
   "Metadata": {
    "aws:cdk:path": "CloudMoviesStack/moviesApi/Default/video/query/Resource"
   }
  },
  "moviesApivideoqueryOPTIONS21E9C661": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "ApiKeyRequired": false,
    "AuthorizationType": "NONE",
    "HttpMethod": "OPTIONS",
    "Integration": {
     "IntegrationResponses": [
      {
       "ResponseParameters": {
        "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'",
        "method.response.header.Access-Control-Allow-Origin": "'*'",
        "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'"
       },
       "StatusCode": "204"
      }
     ],
     "RequestTemplates": {
      "application/json": "{ statusCode: 200 }"
     },
     "Type": "MOCK"
    },
    "MethodResponses": [
     {
      "ResponseParameters": {
       "method.response.header.Access-Control-Allow-Headers": true,
       "method.response.header.Access-Control-Allow-Origin": true,
       "method.response.header.Access-Control-Allow-Methods": true
      },
      "StatusCode": "204"
     }
    ],
    "ResourceId": {
     "Ref": "moviesApivideoquery940AF055"
    },
    "RestApiId": {
     "Ref": "moviesApi63300285"
    }
   },
   "Metadata": {
    "aws:cdk:path": "CloudMoviesStack/moviesApi/Default/video/query/OPTIONS/Resource"
   }
  },
  "moviesApivideoqueryquery639BAB39": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Ref": "moviesApivideoquery940AF055"
    },
    "PathPart": "{query}",
    "RestApiId": {
     "Ref": "moviesApi63300285"
    }
   },
   "Metadata": {
    "aws:cdk:path": "CloudMoviesStack/moviesApi/Default/video/query/{query}/Resource"
   }
  },
  "moviesApivideoqueryqueryOPTIONS70F6377A": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "ApiKeyRequired": false,
    "AuthorizationType": "NONE",
    "HttpMethod": "OPTIONS",
    "Integration": {
     "IntegrationResponses": [
      {
       "ResponseParameters": {
        "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'",
        "method.response.header.Access-Control-Allow-Origin": "'*'",
        "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'"
       },
       "StatusCode": "204"
      }
     ],
     "RequestTemplates": {
      "application/json": "{ statusCode: 200 }"
     },
     "Type": "MOCK"
    },
    "MethodResponses": [
     {
      "ResponseParameters": {
       "method.response.header.Access-Control-Allow-Headers": true,
       "method.response.header.Access-Control-Allow-Origin": true,
       "method.response.header.Access-Control-Allow-Methods": true
      },
      "StatusCode": "204"
     }
    ],
    "ResourceId": {
     "Ref": "moviesApivideoqueryquery639BAB39"
    },
    "RestApiId": {
     "Ref": "moviesApi63300285"
    }
   },
   "Metadata": {
    "aws:cdk:path": "CloudMoviesStack/moviesApi/Default/video/query/{query}/OPTIONS/Resource"
   }
  },
  "moviesApivideoqueryqueryGETApiPermissionCloudMoviesStackmoviesApi4BD0D74DGETvideoqueryquery4CDF13F1": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "queryVideosLambda2A429330",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "moviesApi63300285"
       },
       "/",
       {
        "Ref": "moviesApiDeploymentStageprod986CD890"
       },
       "/GET/video/query/*"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "CloudMoviesStack/moviesApi/Default/video/query/{query}/GET/ApiPermission.CloudMoviesStackmoviesApi4BD0D74D.GET..video.query.{query}"
   }
  },
  "moviesApivideoqueryqueryGETApiPermissionTestCloudMoviesStackmoviesApi4BD0D74DGETvideoqueryqueryBF899F91": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "queryVideosLambda2A429330",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "moviesApi63300285"
       },
       "/test-invoke-stage/GET/video/query/*"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "CloudMoviesStack/moviesApi/Default/video/query/{query}/GET/ApiPermission.Test.CloudMoviesStackmoviesApi4BD0D74D.GET..video.query.{query}"
   }
  },
  "moviesApivideoqueryqueryGETEB3ACAB9": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "AuthorizationType": "CUSTOM",
    "AuthorizerId": {
     "Ref": "CustomAuthorizerC8102921"
    },
    "HttpMethod": "GET",
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":apigateway:",
        {
         "Ref": "AWS::Region"
        },
        ":lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "queryVideosLambda2A429330",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    },
    "ResourceId": {
     "Ref": "moviesApivideoqueryquery639BAB39"
    },
    "RestApiId": {
     "Ref": "moviesApi63300285"
    }
   },
   "Metadata": {
    "aws:cdk:path": "CloudMoviesStack/moviesApi/Default/video/query/{query}/GET/Resource"
   }
  },
  "moviesApivideovideoId4A6DD8E6": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Ref": "moviesApivideo4B32D44F"
    },
    "PathPart": "{videoId}",
    "RestApiId": {
     "Ref": "moviesApi63300285"
    }
   },
   "Metadata": {
    "aws:cdk:path": "CloudMoviesStack/moviesApi/Default/video/{videoId}/Resource"
   }
  },
  "moviesApivideovideoIdOPTIONS50EB454C": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "ApiKeyRequired": false,
    "AuthorizationType": "NONE",
    "HttpMethod": "OPTIONS",
    "Integration": {
     "IntegrationResponses": [
      {
       "ResponseParameters": {
        "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'",
        "method.response.header.Access-Control-Allow-Origin": "'*'",
        "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'"
       },
       "StatusCode": "204"
      }
     ],
     "RequestTemplates": {
      "application/json": "{ statusCode: 200 }"
     },
     "Type": "MOCK"
    },
    "MethodResponses": [
     {
      "ResponseParameters": {
       "method.response.header.Access-Control-Allow-Headers": true,
       "method.response.header.Access-Control-Allow-Origin": true,
       "method.response.header.Access-Control-Allow-Methods": true
      },
      "StatusCode": "204"
     }
    ],
    "ResourceId": {
     "Ref": "moviesApivideovideoId4A6DD8E6"
    },
    "RestApiId": {
     "Ref": "moviesApi63300285"
    }
   },
   "Metadata": {
    "aws:cdk:path": "CloudMoviesStack/moviesApi/Default/video/{videoId}/OPTIONS/Resource"
   }
  },
  "moviesApivideovideoIdresolutionDE703279": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Ref": "moviesApivideovideoId4A6DD8E6"
    },
    "PathPart": "{resolution}",
    "RestApiId": {
     "Ref": "moviesApi63300285"
    }
   },
   "Metadata": {
    "aws:cdk:path": "CloudMoviesStack/moviesApi/Default/video/{videoId}/{resolution}/Resource"
   }
  },
  "moviesApivideovideoIdresolutionOPTIONS92D30042": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "ApiKeyRequired": false,
    "AuthorizationType": "NONE",
    "HttpMethod": "OPTIONS",
    "Integration": {
     "IntegrationResponses": [
      {
       "ResponseParameters": {
        "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'",
        "method.response.header.Access-Control-Allow-Origin": "'*'",
        "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'"
       },
       "StatusCode": "204"
      }
     ],
     "RequestTemplates": {
      "application/json": "{ statusCode: 200 }"
     },
     "Type": "MOCK"
    },
    "MethodResponses": [
     {
      "ResponseParameters": {
       "method.response.header.Access-Control-Allow-Headers": true,
       "method.response.header.Access-Control-Allow-Origin": true,
       "method.response.header.Access-Control-Allow-Methods": true
      },
      "StatusCode": "204"
     }
    ],
    "ResourceId": {
     "Ref": "moviesApivideovideoIdresolutionDE703279"
    },
    "RestApiId": {
     "Ref": "moviesApi63300285"
    }
   },
   "Metadata": {
    "aws:cdk:path": "CloudMoviesStack/moviesApi/Default/video/{videoId}/{resolution}/OPTIONS/Resource"
   }
  },
  "moviesApivideovideoIdresolutionGETApiPermissionCloudMoviesStackmoviesApi4BD0D74DGETvideovideoIdresolutionB192F430": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "streamVideoLambda51A0F66D",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "moviesApi63300285"
       },
       "/",
       {
        "Ref": "moviesApiDeploymentStageprod986CD890"
       },
       "/GET/video/*/*"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "CloudMoviesStack/moviesApi/Default/video/{videoId}/{resolution}/GET/ApiPermission.CloudMoviesStackmoviesApi4BD0D74D.GET..video.{videoId}.{resolution}"
   }
  },
  "moviesApivideovideoIdresolutionGETApiPermissionTestCloudMoviesStackmoviesApi4BD0D74DGETvideovideoIdresolutionF1DCB134": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "streamVideoLambda51A0F66D",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "moviesApi63300285"
       },
       "/test-invoke-stage/GET/video/*/*"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "CloudMoviesStack/moviesApi/Default/video/{videoId}/{resolution}/GET/ApiPermission.Test.CloudMoviesStackmoviesApi4BD0D74D.GET..video.{videoId}.{resolution}"
   }
  },
  "moviesApivideovideoIdresolutionGET7CB14CD9": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "AuthorizationType": "CUSTOM",
    "AuthorizerId": {
     "Ref": "CustomAuthorizerC8102921"
    },
    "HttpMethod": "GET",
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":apigateway:",
        {
         "Ref": "AWS::Region"
        },
        ":lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "streamVideoLambda51A0F66D",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    },
    "ResourceId": {
     "Ref": "moviesApivideovideoIdresolutionDE703279"
    },
    "RestApiId": {
     "Ref": "moviesApi63300285"
    }
   },
   "Metadata": {
    "aws:cdk:path": "CloudMoviesStack/moviesApi/Default/video/{videoId}/{resolution}/GET/Resource"
   }
  },
  "moviesApimovieB0D0B90A": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Fn::GetAtt": [
      "moviesApi63300285",
      "RootResourceId"
     ]
    },
    "PathPart": "movie",
    "RestApiId": {
     "Ref": "moviesApi63300285"
    }
   },
   "Metadata": {
    "aws:cdk:path": "CloudMoviesStack/moviesApi/Default/movie/Resource"
   }
  },
  "moviesApimovieOPTIONS5149EE45": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "ApiKeyRequired": false,
    "AuthorizationType": "NONE",
    "HttpMethod": "OPTIONS",
    "Integration": {
     "IntegrationResponses": [
      {
       "ResponseParameters": {
        "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'",
        "method.response.header.Access-Control-Allow-Origin": "'*'",
        "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'"
       },
       "StatusCode": "204"
      }
     ],
     "RequestTemplates": {
      "application/json": "{ statusCode: 200 }"
     },
     "Type": "MOCK"
    },
    "MethodResponses": [
     {
      "ResponseParameters": {
       "method.response.header.Access-Control-Allow-Headers": true,
       "method.response.header.Access-Control-Allow-Origin": true,
       "method.response.header.Access-Control-Allow-Methods": true
      },
      "StatusCode": "204"
     }
    ],
    "ResourceId": {
     "Ref": "moviesApimovieB0D0B90A"
    },
    "RestApiId": {
     "Ref": "moviesApi63300285"
    }
   },
   "Metadata": {
    "aws:cdk:path": "CloudMoviesStack/moviesApi/Default/movie/OPTIONS/Resource"
   }
  },
  "moviesApimoviemovieId8EABDBED": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Ref": "moviesApimovieB0D0B90A"
    },
    "PathPart": "{movieId}",
    "RestApiId": {
     "Ref": "moviesApi63300285"
    }
   },
   "Metadata": {
    "aws:cdk:path": "CloudMoviesStack/moviesApi/Default/movie/{movieId}/Resource"
   }
  },
  "moviesApimoviemovieIdOPTIONSDF54B39E": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "ApiKeyRequired": false,
    "AuthorizationType": "NONE",
    "HttpMethod": "OPTIONS",
    "Integration": {
     "IntegrationResponses": [
      {
       "ResponseParameters": {
        "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'",
        "method.response.header.Access-Control-Allow-Origin": "'*'",
        "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'"
       },
       "StatusCode": "204"
      }
     ],
     "RequestTemplates": {
      "application/json": "{ statusCode: 200 }"
     },
     "Type": "MOCK"
    },
    "MethodResponses": [
     {
      "ResponseParameters": {
       "method.response.header.Access-Control-Allow-Headers": true,
       "method.response.header.Access-Control-Allow-Origin": true,
       "method.response.header.Access-Control-Allow-Methods": true
      },
      "StatusCode": "204"
     }
    ],
    "ResourceId": {
     "Ref": "moviesApimoviemovieId8EABDBED"
    },
    "RestApiId": {
     "Ref": "moviesApi63300285"
    }
   },
   "Metadata": {
    "aws:cdk:path": "CloudMoviesStack/moviesApi/Default/movie/{movieId}/OPTIONS/Resource"
   }
  },
  "moviesApimoviemovieIdDELETEApiPermissionCloudMoviesStackmoviesApi4BD0D74DDELETEmoviemovieIdEDD02E44": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "deleteMovieLambda63D1CEAD",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "moviesApi63300285"
       },
       "/",
       {
        "Ref": "moviesApiDeploymentStageprod986CD890"
       },
       "/DELETE/movie/*"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "CloudMoviesStack/moviesApi/Default/movie/{movieId}/DELETE/ApiPermission.CloudMoviesStackmoviesApi4BD0D74D.DELETE..movie.{movieId}"
   }
  },
  "moviesApimoviemovieIdDELETEApiPermissionTestCloudMoviesStackmoviesApi4BD0D74DDELETEmoviemovieId8E0BA25A": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "deleteMovieLambda63D1CEAD",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "moviesApi63300285"
       },
       "/test-invoke-stage/DELETE/movie/*"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "CloudMoviesStack/moviesApi/Default/movie/{movieId}/DELETE/ApiPermission.Test.CloudMoviesStackmoviesApi4BD0D74D.DELETE..movie.{movieId}"
   }
  },
  "moviesApimoviemovieIdDELETE0CC0352C": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "AuthorizationType": "CUSTOM",
    "AuthorizerId": {
     "Ref": "CustomAuthorizerC8102921"
    },
    "HttpMethod": "DELETE",
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":apigateway:",
        {
         "Ref": "AWS::Region"
        },
        ":lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "deleteMovieLambda63D1CEAD",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    },
    "ResourceId": {
     "Ref": "moviesApimoviemovieId8EABDBED"
    },
    "RestApiId": {
     "Ref": "moviesApi63300285"
    }
   },
   "Metadata": {
    "aws:cdk:path": "CloudMoviesStack/moviesApi/Default/movie/{movieId}/DELETE/Resource"
   }
  },
  "moviesApishowA3270F35": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Fn::GetAtt": [
      "moviesApi63300285",
      "RootResourceId"
     ]
    },
    "PathPart": "show",
    "RestApiId": {
     "Ref": "moviesApi63300285"
    }
   },
   "Metadata": {
    "aws:cdk:path": "CloudMoviesStack/moviesApi/Default/show/Resource"
   }
  },
  "moviesApishowOPTIONS714FED4C": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "ApiKeyRequired": false,
    "AuthorizationType": "NONE",
    "HttpMethod": "OPTIONS",
    "Integration": {
     "IntegrationResponses": [
      {
       "ResponseParameters": {
        "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'",
        "method.response.header.Access-Control-Allow-Origin": "'*'",
        "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'"
       },
       "StatusCode": "204"
      }
     ],
     "RequestTemplates": {
      "application/json": "{ statusCode: 200 }"
     },
     "Type": "MOCK"
    },
    "MethodResponses": [
     {
      "ResponseParameters": {
       "method.response.header.Access-Control-Allow-Headers": true,
       "method.response.header.Access-Control-Allow-Origin": true,
       "method.response.header.Access-Control-Allow-Methods": true
      },
      "StatusCode": "204"
     }
    ],
    "ResourceId": {
     "Ref": "moviesApishowA3270F35"
    },
    "RestApiId": {
     "Ref": "moviesApi63300285"
    }
   },
   "Metadata": {
    "aws:cdk:path": "CloudMoviesStack/moviesApi/Default/show/OPTIONS/Resource"
   }
  },
  "moviesApishowshowIdD94F986F": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Ref": "moviesApishowA3270F35"
    },
    "PathPart": "{showId}",
    "RestApiId": {
     "Ref": "moviesApi63300285"
    }
   },
   "Metadata": {
    "aws:cdk:path": "CloudMoviesStack/moviesApi/Default/show/{showId}/Resource"
   }
  },
  "moviesApishowshowIdOPTIONSA5394DEA": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "ApiKeyRequired": false,
    "AuthorizationType": "NONE",
    "HttpMethod": "OPTIONS",
    "Integration": {
     "IntegrationResponses": [
      {
       "ResponseParameters": {
        "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'",
        "method.response.header.Access-Control-Allow-Origin": "'*'",
        "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'"
       },
       "StatusCode": "204"
      }
     ],
     "RequestTemplates": {
      "application/json": "{ statusCode: 200 }"
     },
     "Type": "MOCK"
    },
    "MethodResponses": [
     {
      "ResponseParameters": {
       "method.response.header.Access-Control-Allow-Headers": true,
       "method.response.header.Access-Control-Allow-Origin": true,
       "method.response.header.Access-Control-Allow-Methods": true
      },
      "StatusCode": "204"
     }
    ],
    "ResourceId": {
     "Ref": "moviesApishowshowIdD94F986F"
    },
    "RestApiId": {
     "Ref": "moviesApi63300285"
    }
   },
   "Metadata": {
    "aws:cdk:path": "CloudMoviesStack/moviesApi/Default/show/{showId}/OPTIONS/Resource"
   }
  },
  "moviesApishowshowIdseasonDF459793": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Ref": "moviesApishowshowIdD94F986F"
    },
    "PathPart": "{season}",
    "RestApiId": {
     "Ref": "moviesApi63300285"
    }
   },
   "Metadata": {
    "aws:cdk:path": "CloudMoviesStack/moviesApi/Default/show/{showId}/{season}/Resource"
   }
  },
  "moviesApishowshowIdseasonOPTIONS5848F796": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "ApiKeyRequired": false,
    "AuthorizationType": "NONE",
    "HttpMethod": "OPTIONS",
    "Integration": {
     "IntegrationResponses": [
      {
       "ResponseParameters": {
        "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'",
        "method.response.header.Access-Control-Allow-Origin": "'*'",
        "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'"
       },
       "StatusCode": "204"
      }
     ],
     "RequestTemplates": {
      "application/json": "{ statusCode: 200 }"
     },
     "Type": "MOCK"
    },
    "MethodResponses": [
     {
      "ResponseParameters": {
       "method.response.header.Access-Control-Allow-Headers": true,
       "method.response.header.Access-Control-Allow-Origin": true,
       "method.response.header.Access-Control-Allow-Methods": true
      },
      "StatusCode": "204"
     }
    ],
    "ResourceId": {
     "Ref": "moviesApishowshowIdseasonDF459793"
    },
    "RestApiId": {
     "Ref": "moviesApi63300285"
    }
   },
   "Metadata": {
    "aws:cdk:path": "CloudMoviesStack/moviesApi/Default/show/{showId}/{season}/OPTIONS/Resource"
   }
  },
  "moviesApishowshowIdseasonepisodeBFC2346E": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Ref": "moviesApishowshowIdseasonDF459793"
    },
    "PathPart": "{episode}",
    "RestApiId": {
     "Ref": "moviesApi63300285"
    }
   },
   "Metadata": {
    "aws:cdk:path": "CloudMoviesStack/moviesApi/Default/show/{showId}/{season}/{episode}/Resource"
   }
  },
  "moviesApishowshowIdseasonepisodeOPTIONS77EAF564": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "ApiKeyRequired": false,
    "AuthorizationType": "NONE",
    "HttpMethod": "OPTIONS",
    "Integration": {
     "IntegrationResponses": [
      {
       "ResponseParameters": {
        "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'",
        "method.response.header.Access-Control-Allow-Origin": "'*'",
        "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'"
       },
       "StatusCode": "204"
      }
     ],
     "RequestTemplates": {
      "application/json": "{ statusCode: 200 }"
     },
     "Type": "MOCK"
    },
    "MethodResponses": [
     {
      "ResponseParameters": {
       "method.response.header.Access-Control-Allow-Headers": true,
       "method.response.header.Access-Control-Allow-Origin": true,
       "method.response.header.Access-Control-Allow-Methods": true
      },
      "StatusCode": "204"
     }
    ],
    "ResourceId": {
     "Ref": "moviesApishowshowIdseasonepisodeBFC2346E"
    },
    "RestApiId": {
     "Ref": "moviesApi63300285"
    }
   },
   "Metadata": {
    "aws:cdk:path": "CloudMoviesStack/moviesApi/Default/show/{showId}/{season}/{episode}/OPTIONS/Resource"
   }
  },
  "moviesApishowshowIdseasonepisodeGETApiPermissionCloudMoviesStackmoviesApi4BD0D74DGETshowshowIdseasonepisodeA7B14223": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "getEpisodeDetailsLambdaF0EDC814",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "moviesApi63300285"
       },
       "/",
       {
        "Ref": "moviesApiDeploymentStageprod986CD890"
       },
       "/GET/show/*/*/*"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "CloudMoviesStack/moviesApi/Default/show/{showId}/{season}/{episode}/GET/ApiPermission.CloudMoviesStackmoviesApi4BD0D74D.GET..show.{showId}.{season}.{episode}"
   }
  },
  "moviesApishowshowIdseasonepisodeGETApiPermissionTestCloudMoviesStackmoviesApi4BD0D74DGETshowshowIdseasonepisodeC9D85EC8": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "getEpisodeDetailsLambdaF0EDC814",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "moviesApi63300285"
       },
       "/test-invoke-stage/GET/show/*/*/*"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "CloudMoviesStack/moviesApi/Default/show/{showId}/{season}/{episode}/GET/ApiPermission.Test.CloudMoviesStackmoviesApi4BD0D74D.GET..show.{showId}.{season}.{episode}"
   }
  },
  "moviesApishowshowIdseasonepisodeGET0EA1C64D": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "AuthorizationType": "CUSTOM",
    "AuthorizerId": {
     "Ref": "CustomAuthorizerC8102921"
    },
    "HttpMethod": "GET",
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":apigateway:",
        {
         "Ref": "AWS::Region"
        },
        ":lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "getEpisodeDetailsLambdaF0EDC814",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    },
    "ResourceId": {
     "Ref": "moviesApishowshowIdseasonepisodeBFC2346E"
    },
    "RestApiId": {
     "Ref": "moviesApi63300285"
    }
   },
   "Metadata": {
    "aws:cdk:path": "CloudMoviesStack/moviesApi/Default/show/{showId}/{season}/{episode}/GET/Resource"
   }
  },
  "moviesApishowshowIdseasonepisodeDELETEApiPermissionCloudMoviesStackmoviesApi4BD0D74DDELETEshowshowIdseasonepisode6133A190": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "deleteEpisodeLambda5735F8A0",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "moviesApi63300285"
       },
       "/",
       {
        "Ref": "moviesApiDeploymentStageprod986CD890"
       },
       "/DELETE/show/*/*/*"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "CloudMoviesStack/moviesApi/Default/show/{showId}/{season}/{episode}/DELETE/ApiPermission.CloudMoviesStackmoviesApi4BD0D74D.DELETE..show.{showId}.{season}.{episode}"
   }
  },
  "moviesApishowshowIdseasonepisodeDELETEApiPermissionTestCloudMoviesStackmoviesApi4BD0D74DDELETEshowshowIdseasonepisodeDAA5ADF5": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "deleteEpisodeLambda5735F8A0",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "moviesApi63300285"
       },
       "/test-invoke-stage/DELETE/show/*/*/*"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "CloudMoviesStack/moviesApi/Default/show/{showId}/{season}/{episode}/DELETE/ApiPermission.Test.CloudMoviesStackmoviesApi4BD0D74D.DELETE..show.{showId}.{season}.{episode}"
   }
  },
  "moviesApishowshowIdseasonepisodeDELETE2E623C0C": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "AuthorizationType": "CUSTOM",
    "AuthorizerId": {
     "Ref": "CustomAuthorizerC8102921"
    },
    "HttpMethod": "DELETE",
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":apigateway:",
        {
         "Ref": "AWS::Region"
        },
        ":lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "deleteEpisodeLambda5735F8A0",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    },
    "ResourceId": {
     "Ref": "moviesApishowshowIdseasonepisodeBFC2346E"
    },
    "RestApiId": {
     "Ref": "moviesApi63300285"
    }
   },
   "Metadata": {
    "aws:cdk:path": "CloudMoviesStack/moviesApi/Default/show/{showId}/{season}/{episode}/DELETE/Resource"
   }
  },
  "moviesApishowshowIdseasonPUTApiPermissionCloudMoviesStackmoviesApi4BD0D74DPUTshowshowIdseason20BE7E82": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "editEpisodeLambdaD97CF2B4",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "moviesApi63300285"
       },
       "/",
       {
        "Ref": "moviesApiDeploymentStageprod986CD890"
       },
       "/PUT/show/*/*"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "CloudMoviesStack/moviesApi/Default/show/{showId}/{season}/PUT/ApiPermission.CloudMoviesStackmoviesApi4BD0D74D.PUT..show.{showId}.{season}"
   }
  },
  "moviesApishowshowIdseasonPUTApiPermissionTestCloudMoviesStackmoviesApi4BD0D74DPUTshowshowIdseasonAB2B1867": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "editEpisodeLambdaD97CF2B4",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "moviesApi63300285"
       },
       "/test-invoke-stage/PUT/show/*/*"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "CloudMoviesStack/moviesApi/Default/show/{showId}/{season}/PUT/ApiPermission.Test.CloudMoviesStackmoviesApi4BD0D74D.PUT..show.{showId}.{season}"
   }
  },
  "moviesApishowshowIdseasonPUTF9DE7D68": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "AuthorizationType": "CUSTOM",
    "AuthorizerId": {
     "Ref": "CustomAuthorizerC8102921"
    },
    "HttpMethod": "PUT",
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":apigateway:",
        {
         "Ref": "AWS::Region"
        },
        ":lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "editEpisodeLambdaD97CF2B4",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    },
    "ResourceId": {
     "Ref": "moviesApishowshowIdseasonDF459793"
    },
    "RestApiId": {
     "Ref": "moviesApi63300285"
    }
   },
   "Metadata": {
    "aws:cdk:path": "CloudMoviesStack/moviesApi/Default/show/{showId}/{season}/PUT/Resource"
   }
  },
  "moviesApishowshowIdseasonDELETEApiPermissionCloudMoviesStackmoviesApi4BD0D74DDELETEshowshowIdseasonEF4C9F96": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "deleteSeasonLambda85B56115",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "moviesApi63300285"
       },
       "/",
       {
        "Ref": "moviesApiDeploymentStageprod986CD890"
       },
       "/DELETE/show/*/*"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "CloudMoviesStack/moviesApi/Default/show/{showId}/{season}/DELETE/ApiPermission.CloudMoviesStackmoviesApi4BD0D74D.DELETE..show.{showId}.{season}"
   }
  },
  "moviesApishowshowIdseasonDELETEApiPermissionTestCloudMoviesStackmoviesApi4BD0D74DDELETEshowshowIdseason8576542C": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "deleteSeasonLambda85B56115",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "moviesApi63300285"
       },
       "/test-invoke-stage/DELETE/show/*/*"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "CloudMoviesStack/moviesApi/Default/show/{showId}/{season}/DELETE/ApiPermission.Test.CloudMoviesStackmoviesApi4BD0D74D.DELETE..show.{showId}.{season}"
   }
  },
  "moviesApishowshowIdseasonDELETEC74342C9": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "AuthorizationType": "CUSTOM",
    "AuthorizerId": {
     "Ref": "CustomAuthorizerC8102921"
    },
    "HttpMethod": "DELETE",
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":apigateway:",
        {
         "Ref": "AWS::Region"
        },
        ":lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "deleteSeasonLambda85B56115",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    },
    "ResourceId": {
     "Ref": "moviesApishowshowIdseasonDF459793"
    },
    "RestApiId": {
     "Ref": "moviesApi63300285"
    }
   },
   "Metadata": {
    "aws:cdk:path": "CloudMoviesStack/moviesApi/Default/show/{showId}/{season}/DELETE/Resource"
   }
  },
  "moviesApishowshowIdseasonDetailsE1041397": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Ref": "moviesApishowshowIdD94F986F"
    },
    "PathPart": "seasonDetails",
    "RestApiId": {
     "Ref": "moviesApi63300285"
    }
   },
   "Metadata": {
    "aws:cdk:path": "CloudMoviesStack/moviesApi/Default/show/{showId}/seasonDetails/Resource"
   }
  },
  "moviesApishowshowIdseasonDetailsOPTIONSE52E8D4B": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "ApiKeyRequired": false,
    "AuthorizationType": "NONE",
    "HttpMethod": "OPTIONS",
    "Integration": {
     "IntegrationResponses": [
      {
       "ResponseParameters": {
        "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'",
        "method.response.header.Access-Control-Allow-Origin": "'*'",
        "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'"
       },
       "StatusCode": "204"
      }
     ],
     "RequestTemplates": {
      "application/json": "{ statusCode: 200 }"
     },
     "Type": "MOCK"
    },
    "MethodResponses": [
     {
      "ResponseParameters": {
       "method.response.header.Access-Control-Allow-Headers": true,
       "method.response.header.Access-Control-Allow-Origin": true,
       "method.response.header.Access-Control-Allow-Methods": true
      },
      "StatusCode": "204"
     }
    ],
    "ResourceId": {
     "Ref": "moviesApishowshowIdseasonDetailsE1041397"
    },
    "RestApiId": {
     "Ref": "moviesApi63300285"
    }
   },
   "Metadata": {
    "aws:cdk:path": "CloudMoviesStack/moviesApi/Default/show/{showId}/seasonDetails/OPTIONS/Resource"
   }
  },
  "moviesApishowshowIdseasonDetailsGETApiPermissionCloudMoviesStackmoviesApi4BD0D74DGETshowshowIdseasonDetails71937A4B": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "getSeasonsDetailsLambda73515D71",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "moviesApi63300285"
       },
       "/",
       {
        "Ref": "moviesApiDeploymentStageprod986CD890"
       },
       "/GET/show/*/seasonDetails"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "CloudMoviesStack/moviesApi/Default/show/{showId}/seasonDetails/GET/ApiPermission.CloudMoviesStackmoviesApi4BD0D74D.GET..show.{showId}.seasonDetails"
   }
  },
  "moviesApishowshowIdseasonDetailsGETApiPermissionTestCloudMoviesStackmoviesApi4BD0D74DGETshowshowIdseasonDetails42F60C0F": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "getSeasonsDetailsLambda73515D71",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "moviesApi63300285"
       },
       "/test-invoke-stage/GET/show/*/seasonDetails"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "CloudMoviesStack/moviesApi/Default/show/{showId}/seasonDetails/GET/ApiPermission.Test.CloudMoviesStackmoviesApi4BD0D74D.GET..show.{showId}.seasonDetails"
   }
  },
  "moviesApishowshowIdseasonDetailsGETB28C49BB": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "AuthorizationType": "CUSTOM",
    "AuthorizerId": {
     "Ref": "CustomAuthorizerC8102921"
    },
    "HttpMethod": "GET",
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":apigateway:",
        {
         "Ref": "AWS::Region"
        },
        ":lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "getSeasonsDetailsLambda73515D71",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    },
    "ResourceId": {
     "Ref": "moviesApishowshowIdseasonDetailsE1041397"
    },
    "RestApiId": {
     "Ref": "moviesApi63300285"
    }
   },
   "Metadata": {
    "aws:cdk:path": "CloudMoviesStack/moviesApi/Default/show/{showId}/seasonDetails/GET/Resource"
   }
  },
  "moviesApishowshowIdPOSTApiPermissionCloudMoviesStackmoviesApi4BD0D74DPOSTshowshowIdBA8C7F99": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "createSeasonLambdaB8377D0D",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "moviesApi63300285"
       },
       "/",
       {
        "Ref": "moviesApiDeploymentStageprod986CD890"
       },
       "/POST/show/*"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "CloudMoviesStack/moviesApi/Default/show/{showId}/POST/ApiPermission.CloudMoviesStackmoviesApi4BD0D74D.POST..show.{showId}"
   }
  },
  "moviesApishowshowIdPOSTApiPermissionTestCloudMoviesStackmoviesApi4BD0D74DPOSTshowshowId21DF8E71": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "createSeasonLambdaB8377D0D",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "moviesApi63300285"
       },
       "/test-invoke-stage/POST/show/*"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "CloudMoviesStack/moviesApi/Default/show/{showId}/POST/ApiPermission.Test.CloudMoviesStackmoviesApi4BD0D74D.POST..show.{showId}"
   }
  },
  "moviesApishowshowIdPOSTDD9DFD39": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "AuthorizationType": "CUSTOM",
    "AuthorizerId": {
     "Ref": "CustomAuthorizerC8102921"
    },
    "HttpMethod": "POST",
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":apigateway:",
        {
         "Ref": "AWS::Region"
        },
        ":lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "createSeasonLambdaB8377D0D",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    },
    "ResourceId": {
     "Ref": "moviesApishowshowIdD94F986F"
    },
    "RestApiId": {
     "Ref": "moviesApi63300285"
    }
   },
   "Metadata": {
    "aws:cdk:path": "CloudMoviesStack/moviesApi/Default/show/{showId}/POST/Resource"
   }
  },
  "moviesApishowshowIdDELETEApiPermissionCloudMoviesStackmoviesApi4BD0D74DDELETEshowshowIdD2167CC2": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "deleteShowLambdaDE5B7ABF",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "moviesApi63300285"
       },
       "/",
       {
        "Ref": "moviesApiDeploymentStageprod986CD890"
       },
       "/DELETE/show/*"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "CloudMoviesStack/moviesApi/Default/show/{showId}/DELETE/ApiPermission.CloudMoviesStackmoviesApi4BD0D74D.DELETE..show.{showId}"
   }
  },
  "moviesApishowshowIdDELETEApiPermissionTestCloudMoviesStackmoviesApi4BD0D74DDELETEshowshowId3DA85A8C": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "deleteShowLambdaDE5B7ABF",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "moviesApi63300285"
       },
       "/test-invoke-stage/DELETE/show/*"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "CloudMoviesStack/moviesApi/Default/show/{showId}/DELETE/ApiPermission.Test.CloudMoviesStackmoviesApi4BD0D74D.DELETE..show.{showId}"
   }
  },
  "moviesApishowshowIdDELETEC7CF0ABD": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "AuthorizationType": "CUSTOM",
    "AuthorizerId": {
     "Ref": "CustomAuthorizerC8102921"
    },
    "HttpMethod": "DELETE",
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":apigateway:",
        {
         "Ref": "AWS::Region"
        },
        ":lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "deleteShowLambdaDE5B7ABF",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    },
    "ResourceId": {
     "Ref": "moviesApishowshowIdD94F986F"
    },
    "RestApiId": {
     "Ref": "moviesApi63300285"
    }
   },
   "Metadata": {
    "aws:cdk:path": "CloudMoviesStack/moviesApi/Default/show/{showId}/DELETE/Resource"
   }
  },
  "moviesApishowPOSTApiPermissionCloudMoviesStackmoviesApi4BD0D74DPOSTshowABD433A1": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "createShowLambda64A8046E",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "moviesApi63300285"
       },
       "/",
       {
        "Ref": "moviesApiDeploymentStageprod986CD890"
       },
       "/POST/show"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "CloudMoviesStack/moviesApi/Default/show/POST/ApiPermission.CloudMoviesStackmoviesApi4BD0D74D.POST..show"
   }
  },
  "moviesApishowPOSTApiPermissionTestCloudMoviesStackmoviesApi4BD0D74DPOSTshow5A39705E": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "createShowLambda64A8046E",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "moviesApi63300285"
       },
       "/test-invoke-stage/POST/show"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "CloudMoviesStack/moviesApi/Default/show/POST/ApiPermission.Test.CloudMoviesStackmoviesApi4BD0D74D.POST..show"
   }
  },
  "moviesApishowPOST1BE1664D": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "AuthorizationType": "CUSTOM",
    "AuthorizerId": {
     "Ref": "CustomAuthorizerC8102921"
    },
    "HttpMethod": "POST",
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":apigateway:",
        {
         "Ref": "AWS::Region"
        },
        ":lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "createShowLambda64A8046E",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    },
    "ResourceId": {
     "Ref": "moviesApishowA3270F35"
    },
    "RestApiId": {
     "Ref": "moviesApi63300285"
    }
   },
   "Metadata": {
    "aws:cdk:path": "CloudMoviesStack/moviesApi/Default/show/POST/Resource"
   }
  },
  "moviesApisubscription33C4F466": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Fn::GetAtt": [
      "moviesApi63300285",
      "RootResourceId"
     ]
    },
    "PathPart": "subscription",
    "RestApiId": {
     "Ref": "moviesApi63300285"
    }
   },
   "Metadata": {
    "aws:cdk:path": "CloudMoviesStack/moviesApi/Default/subscription/Resource"
   }
  },
  "moviesApisubscriptionOPTIONS08D493E4": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "ApiKeyRequired": false,
    "AuthorizationType": "NONE",
    "HttpMethod": "OPTIONS",
    "Integration": {
     "IntegrationResponses": [
      {
       "ResponseParameters": {
        "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'",
        "method.response.header.Access-Control-Allow-Origin": "'*'",
        "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'"
       },
       "StatusCode": "204"
      }
     ],
     "RequestTemplates": {
      "application/json": "{ statusCode: 200 }"
     },
     "Type": "MOCK"
    },
    "MethodResponses": [
     {
      "ResponseParameters": {
       "method.response.header.Access-Control-Allow-Headers": true,
       "method.response.header.Access-Control-Allow-Origin": true,
       "method.response.header.Access-Control-Allow-Methods": true
      },
      "StatusCode": "204"
     }
    ],
    "ResourceId": {
     "Ref": "moviesApisubscription33C4F466"
    },
    "RestApiId": {
     "Ref": "moviesApi63300285"
    }
   },
   "Metadata": {
    "aws:cdk:path": "CloudMoviesStack/moviesApi/Default/subscription/OPTIONS/Resource"
   }
  },
  "moviesApisubscriptionuserIdF4B7986A": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Ref": "moviesApisubscription33C4F466"
    },
    "PathPart": "{userId}",
    "RestApiId": {
     "Ref": "moviesApi63300285"
    }
   },
   "Metadata": {
    "aws:cdk:path": "CloudMoviesStack/moviesApi/Default/subscription/{userId}/Resource"
   }
  },
  "moviesApisubscriptionuserIdOPTIONS1C7FDA72": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "ApiKeyRequired": false,
    "AuthorizationType": "NONE",
    "HttpMethod": "OPTIONS",
    "Integration": {
     "IntegrationResponses": [
      {
       "ResponseParameters": {
        "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'",
        "method.response.header.Access-Control-Allow-Origin": "'*'",
        "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'"
       },
       "StatusCode": "204"
      }
     ],
     "RequestTemplates": {
      "application/json": "{ statusCode: 200 }"
     },
     "Type": "MOCK"
    },
    "MethodResponses": [
     {
      "ResponseParameters": {
       "method.response.header.Access-Control-Allow-Headers": true,
       "method.response.header.Access-Control-Allow-Origin": true,
       "method.response.header.Access-Control-Allow-Methods": true
      },
      "StatusCode": "204"
     }
    ],
    "ResourceId": {
     "Ref": "moviesApisubscriptionuserIdF4B7986A"
    },
    "RestApiId": {
     "Ref": "moviesApi63300285"
    }
   },
   "Metadata": {
    "aws:cdk:path": "CloudMoviesStack/moviesApi/Default/subscription/{userId}/OPTIONS/Resource"
   }
  },
  "moviesApisubscriptionuserIdGETApiPermissionCloudMoviesStackmoviesApi4BD0D74DGETsubscriptionuserId357DA0DC": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "listSubscriptionsLambdaCF1C4AF6",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "moviesApi63300285"
       },
       "/",
       {
        "Ref": "moviesApiDeploymentStageprod986CD890"
       },
       "/GET/subscription/*"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "CloudMoviesStack/moviesApi/Default/subscription/{userId}/GET/ApiPermission.CloudMoviesStackmoviesApi4BD0D74D.GET..subscription.{userId}"
   }
  },
  "moviesApisubscriptionuserIdGETApiPermissionTestCloudMoviesStackmoviesApi4BD0D74DGETsubscriptionuserId63E0002B": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "listSubscriptionsLambdaCF1C4AF6",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "moviesApi63300285"
       },
       "/test-invoke-stage/GET/subscription/*"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "CloudMoviesStack/moviesApi/Default/subscription/{userId}/GET/ApiPermission.Test.CloudMoviesStackmoviesApi4BD0D74D.GET..subscription.{userId}"
   }
  },
  "moviesApisubscriptionuserIdGETA718A030": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "AuthorizationType": "CUSTOM",
    "AuthorizerId": {
     "Ref": "CustomAuthorizerC8102921"
    },
    "HttpMethod": "GET",
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":apigateway:",
        {
         "Ref": "AWS::Region"
        },
        ":lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "listSubscriptionsLambdaCF1C4AF6",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    },
    "ResourceId": {
     "Ref": "moviesApisubscriptionuserIdF4B7986A"
    },
    "RestApiId": {
     "Ref": "moviesApi63300285"
    }
   },
   "Metadata": {
    "aws:cdk:path": "CloudMoviesStack/moviesApi/Default/subscription/{userId}/GET/Resource"
   }
  },
  "moviesApisubscriptionuserIdPOSTApiPermissionCloudMoviesStackmoviesApi4BD0D74DPOSTsubscriptionuserId75A3425F": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "subscribeLambda023905A9",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "moviesApi63300285"
       },
       "/",
       {
        "Ref": "moviesApiDeploymentStageprod986CD890"
       },
       "/POST/subscription/*"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "CloudMoviesStack/moviesApi/Default/subscription/{userId}/POST/ApiPermission.CloudMoviesStackmoviesApi4BD0D74D.POST..subscription.{userId}"
   }
  },
  "moviesApisubscriptionuserIdPOSTApiPermissionTestCloudMoviesStackmoviesApi4BD0D74DPOSTsubscriptionuserIdCA81AABE": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "subscribeLambda023905A9",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "moviesApi63300285"
       },
       "/test-invoke-stage/POST/subscription/*"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "CloudMoviesStack/moviesApi/Default/subscription/{userId}/POST/ApiPermission.Test.CloudMoviesStackmoviesApi4BD0D74D.POST..subscription.{userId}"
   }
  },
  "moviesApisubscriptionuserIdPOSTE900F3E2": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "AuthorizationType": "CUSTOM",
    "AuthorizerId": {
     "Ref": "CustomAuthorizerC8102921"
    },
    "HttpMethod": "POST",
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":apigateway:",
        {
         "Ref": "AWS::Region"
        },
        ":lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "subscribeLambda023905A9",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    },
    "ResourceId": {
     "Ref": "moviesApisubscriptionuserIdF4B7986A"
    },
    "RestApiId": {
     "Ref": "moviesApi63300285"
    }
   },
   "Metadata": {
    "aws:cdk:path": "CloudMoviesStack/moviesApi/Default/subscription/{userId}/POST/Resource"
   }
  },
  "moviesApisubscriptionuserIdtype845CD63B": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Ref": "moviesApisubscriptionuserIdF4B7986A"
    },
    "PathPart": "{type}",
    "RestApiId": {
     "Ref": "moviesApi63300285"
    }
   },
   "Metadata": {
    "aws:cdk:path": "CloudMoviesStack/moviesApi/Default/subscription/{userId}/{type}/Resource"
   }
  },
  "moviesApisubscriptionuserIdtypeOPTIONS4CE01002": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "ApiKeyRequired": false,
    "AuthorizationType": "NONE",
    "HttpMethod": "OPTIONS",
    "Integration": {
     "IntegrationResponses": [
      {
       "ResponseParameters": {
        "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'",
        "method.response.header.Access-Control-Allow-Origin": "'*'",
        "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'"
       },
       "StatusCode": "204"
      }
     ],
     "RequestTemplates": {
      "application/json": "{ statusCode: 200 }"
     },
     "Type": "MOCK"
    },
    "MethodResponses": [
     {
      "ResponseParameters": {
       "method.response.header.Access-Control-Allow-Headers": true,
       "method.response.header.Access-Control-Allow-Origin": true,
       "method.response.header.Access-Control-Allow-Methods": true
      },
      "StatusCode": "204"
     }
    ],
    "ResourceId": {
     "Ref": "moviesApisubscriptionuserIdtype845CD63B"
    },
    "RestApiId": {
     "Ref": "moviesApi63300285"
    }
   },
   "Metadata": {
    "aws:cdk:path": "CloudMoviesStack/moviesApi/Default/subscription/{userId}/{type}/OPTIONS/Resource"
   }
  },
  "moviesApisubscriptionuserIdtypename702EFD8F": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Ref": "moviesApisubscriptionuserIdtype845CD63B"
    },
    "PathPart": "{name}",
    "RestApiId": {
     "Ref": "moviesApi63300285"
    }
   },
   "Metadata": {
    "aws:cdk:path": "CloudMoviesStack/moviesApi/Default/subscription/{userId}/{type}/{name}/Resource"
   }
  },
  "moviesApisubscriptionuserIdtypenameOPTIONS1884F479": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "ApiKeyRequired": false,
    "AuthorizationType": "NONE",
    "HttpMethod": "OPTIONS",
    "Integration": {
     "IntegrationResponses": [
      {
       "ResponseParameters": {
        "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'",
        "method.response.header.Access-Control-Allow-Origin": "'*'",
        "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'"
       },
       "StatusCode": "204"
      }
     ],
     "RequestTemplates": {
      "application/json": "{ statusCode: 200 }"
     },
     "Type": "MOCK"
    },
    "MethodResponses": [
     {
      "ResponseParameters": {
       "method.response.header.Access-Control-Allow-Headers": true,
       "method.response.header.Access-Control-Allow-Origin": true,
       "method.response.header.Access-Control-Allow-Methods": true
      },
      "StatusCode": "204"
     }
    ],
    "ResourceId": {
     "Ref": "moviesApisubscriptionuserIdtypename702EFD8F"
    },
    "RestApiId": {
     "Ref": "moviesApi63300285"
    }
   },
   "Metadata": {
    "aws:cdk:path": "CloudMoviesStack/moviesApi/Default/subscription/{userId}/{type}/{name}/OPTIONS/Resource"
   }
  },
  "moviesApisubscriptionuserIdtypenameDELETEApiPermissionCloudMoviesStackmoviesApi4BD0D74DDELETEsubscriptionuserIdtypename696C5B8C": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "unsubscribeLambdaF210435A",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "moviesApi63300285"
       },
       "/",
       {
        "Ref": "moviesApiDeploymentStageprod986CD890"
       },
       "/DELETE/subscription/*/*/*"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "CloudMoviesStack/moviesApi/Default/subscription/{userId}/{type}/{name}/DELETE/ApiPermission.CloudMoviesStackmoviesApi4BD0D74D.DELETE..subscription.{userId}.{type}.{name}"
   }
  },
  "moviesApisubscriptionuserIdtypenameDELETEApiPermissionTestCloudMoviesStackmoviesApi4BD0D74DDELETEsubscriptionuserIdtypename0B1AE39E": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "unsubscribeLambdaF210435A",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "moviesApi63300285"
       },
       "/test-invoke-stage/DELETE/subscription/*/*/*"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "CloudMoviesStack/moviesApi/Default/subscription/{userId}/{type}/{name}/DELETE/ApiPermission.Test.CloudMoviesStackmoviesApi4BD0D74D.DELETE..subscription.{userId}.{type}.{name}"
   }
  },
  "moviesApisubscriptionuserIdtypenameDELETEDA8B2FCB": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "AuthorizationType": "CUSTOM",
    "AuthorizerId": {
     "Ref": "CustomAuthorizerC8102921"
    },
    "HttpMethod": "DELETE",
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":apigateway:",
        {
         "Ref": "AWS::Region"
        },
        ":lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "unsubscribeLambdaF210435A",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    },
    "ResourceId": {
     "Ref": "moviesApisubscriptionuserIdtypename702EFD8F"
    },
    "RestApiId": {
     "Ref": "moviesApi63300285"
    }
   },
   "Metadata": {
    "aws:cdk:path": "CloudMoviesStack/moviesApi/Default/subscription/{userId}/{type}/{name}/DELETE/Resource"
   }
  },
  "moviesApiratings8810C690": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Fn::GetAtt": [
      "moviesApi63300285",
      "RootResourceId"
     ]
    },
    "PathPart": "ratings",
    "RestApiId": {
     "Ref": "moviesApi63300285"
    }
   },
   "Metadata": {
    "aws:cdk:path": "CloudMoviesStack/moviesApi/Default/ratings/Resource"
   }
  },
  "moviesApiratingsOPTIONSC4C4341C": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "ApiKeyRequired": false,
    "AuthorizationType": "NONE",
    "HttpMethod": "OPTIONS",
    "Integration": {
     "IntegrationResponses": [
      {
       "ResponseParameters": {
        "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'",
        "method.response.header.Access-Control-Allow-Origin": "'*'",
        "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'"
       },
       "StatusCode": "204"
      }
     ],
     "RequestTemplates": {
      "application/json": "{ statusCode: 200 }"
     },
     "Type": "MOCK"
    },
    "MethodResponses": [
     {
      "ResponseParameters": {
       "method.response.header.Access-Control-Allow-Headers": true,
       "method.response.header.Access-Control-Allow-Origin": true,
       "method.response.header.Access-Control-Allow-Methods": true
      },
      "StatusCode": "204"
     }
    ],
    "ResourceId": {
     "Ref": "moviesApiratings8810C690"
    },
    "RestApiId": {
     "Ref": "moviesApi63300285"
    }
   },
   "Metadata": {
    "aws:cdk:path": "CloudMoviesStack/moviesApi/Default/ratings/OPTIONS/Resource"
   }
  },
  "moviesApiratingsuserid66DBEAA9": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Ref": "moviesApiratings8810C690"
    },
    "PathPart": "{user_id}",
    "RestApiId": {
     "Ref": "moviesApi63300285"
    }
   },
   "Metadata": {
    "aws:cdk:path": "CloudMoviesStack/moviesApi/Default/ratings/{user_id}/Resource"
   }
  },
  "moviesApiratingsuseridOPTIONS613B05F6": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "ApiKeyRequired": false,
    "AuthorizationType": "NONE",
    "HttpMethod": "OPTIONS",
    "Integration": {
     "IntegrationResponses": [
      {
       "ResponseParameters": {
        "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'",
        "method.response.header.Access-Control-Allow-Origin": "'*'",
        "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'"
       },
       "StatusCode": "204"
      }
     ],
     "RequestTemplates": {
      "application/json": "{ statusCode: 200 }"
     },
     "Type": "MOCK"
    },
    "MethodResponses": [
     {
      "ResponseParameters": {
       "method.response.header.Access-Control-Allow-Headers": true,
       "method.response.header.Access-Control-Allow-Origin": true,
       "method.response.header.Access-Control-Allow-Methods": true
      },
      "StatusCode": "204"
     }
    ],
    "ResourceId": {
     "Ref": "moviesApiratingsuserid66DBEAA9"
    },
    "RestApiId": {
     "Ref": "moviesApi63300285"
    }
   },
   "Metadata": {
    "aws:cdk:path": "CloudMoviesStack/moviesApi/Default/ratings/{user_id}/OPTIONS/Resource"
   }
  },
  "moviesApiratingsuseridPOSTApiPermissionCloudMoviesStackmoviesApi4BD0D74DPOSTratingsuserid9E1FAD17": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "rateContentLambdaF55611D1",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "moviesApi63300285"
       },
       "/",
       {
        "Ref": "moviesApiDeploymentStageprod986CD890"
       },
       "/POST/ratings/*"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "CloudMoviesStack/moviesApi/Default/ratings/{user_id}/POST/ApiPermission.CloudMoviesStackmoviesApi4BD0D74D.POST..ratings.{user_id}"
   }
  },
  "moviesApiratingsuseridPOSTApiPermissionTestCloudMoviesStackmoviesApi4BD0D74DPOSTratingsuseridBB44BA88": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "rateContentLambdaF55611D1",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "moviesApi63300285"
       },
       "/test-invoke-stage/POST/ratings/*"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "CloudMoviesStack/moviesApi/Default/ratings/{user_id}/POST/ApiPermission.Test.CloudMoviesStackmoviesApi4BD0D74D.POST..ratings.{user_id}"
   }
  },
  "moviesApiratingsuseridPOST8285EFF5": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "AuthorizationType": "CUSTOM",
    "AuthorizerId": {
     "Ref": "CustomAuthorizerC8102921"
    },
    "HttpMethod": "POST",
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":apigateway:",
        {
         "Ref": "AWS::Region"
        },
        ":lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "rateContentLambdaF55611D1",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    },
    "ResourceId": {
     "Ref": "moviesApiratingsuserid66DBEAA9"
    },
    "RestApiId": {
     "Ref": "moviesApi63300285"
    }
   },
   "Metadata": {
    "aws:cdk:path": "CloudMoviesStack/moviesApi/Default/ratings/{user_id}/POST/Resource"
   }
  },
  "moviesApiupload4C057A87": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Fn::GetAtt": [
      "moviesApi63300285",
      "RootResourceId"
     ]
    },
    "PathPart": "upload",
    "RestApiId": {
     "Ref": "moviesApi63300285"
    }
   },
   "Metadata": {
    "aws:cdk:path": "CloudMoviesStack/moviesApi/Default/upload/Resource"
   }
  },
  "moviesApiuploadOPTIONSD1729757": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "ApiKeyRequired": false,
    "AuthorizationType": "NONE",
    "HttpMethod": "OPTIONS",
    "Integration": {
     "IntegrationResponses": [
      {
       "ResponseParameters": {
        "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'",
        "method.response.header.Access-Control-Allow-Origin": "'*'",
        "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'"
       },
       "StatusCode": "204"
      }
     ],
     "RequestTemplates": {
      "application/json": "{ statusCode: 200 }"
     },
     "Type": "MOCK"
    },
    "MethodResponses": [
     {
      "ResponseParameters": {
       "method.response.header.Access-Control-Allow-Headers": true,
       "method.response.header.Access-Control-Allow-Origin": true,
       "method.response.header.Access-Control-Allow-Methods": true
      },
      "StatusCode": "204"
     }
    ],
    "ResourceId": {
     "Ref": "moviesApiupload4C057A87"
    },
    "RestApiId": {
     "Ref": "moviesApi63300285"
    }
   },
   "Metadata": {
    "aws:cdk:path": "CloudMoviesStack/moviesApi/Default/upload/OPTIONS/Resource"
   }
  },
  "moviesApiuploadGETApiPermissionCloudMoviesStackmoviesApi4BD0D74DGETupload55571CFE": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "uploadVideoLambda44F7DE58",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "moviesApi63300285"
       },
       "/",
       {
        "Ref": "moviesApiDeploymentStageprod986CD890"
       },
       "/GET/upload"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "CloudMoviesStack/moviesApi/Default/upload/GET/ApiPermission.CloudMoviesStackmoviesApi4BD0D74D.GET..upload"
   }
  },
  "moviesApiuploadGETApiPermissionTestCloudMoviesStackmoviesApi4BD0D74DGETupload8DAD21E0": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "uploadVideoLambda44F7DE58",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "moviesApi63300285"
       },
       "/test-invoke-stage/GET/upload"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "CloudMoviesStack/moviesApi/Default/upload/GET/ApiPermission.Test.CloudMoviesStackmoviesApi4BD0D74D.GET..upload"
   }
  },
  "moviesApiuploadGET869EC398": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "AuthorizationType": "CUSTOM",
    "AuthorizerId": {
     "Ref": "CustomAuthorizerC8102921"
    },
    "HttpMethod": "GET",
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":apigateway:",
        {
         "Ref": "AWS::Region"
        },
        ":lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "uploadVideoLambda44F7DE58",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    },
    "ResourceId": {
     "Ref": "moviesApiupload4C057A87"
    },
    "RestApiId": {
     "Ref": "moviesApi63300285"
    }
   },
   "Metadata": {
    "aws:cdk:path": "CloudMoviesStack/moviesApi/Default/upload/GET/Resource"
   }
  },
  "getSeasonsDetailsLambdaServiceRole57C5577D": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "CloudMoviesStack/getSeasonsDetailsLambda/ServiceRole/Resource"
   }
  },
  "getSeasonsDetailsLambdaServiceRoleDefaultPolicy7CA9C367": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "dynamodb:BatchGetItem",
        "dynamodb:ConditionCheckItem",
        "dynamodb:DescribeTable",
        "dynamodb:GetItem",
        "dynamodb:GetRecords",
        "dynamodb:GetShardIterator",
        "dynamodb:Query",
        "dynamodb:Scan"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "videosTableBCC40D2B",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "videosTableBCC40D2B",
             "Arn"
            ]
           },
           "/index/*"
          ]
         ]
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "getSeasonsDetailsLambdaServiceRoleDefaultPolicy7CA9C367",
    "Roles": [
     {
      "Ref": "getSeasonsDetailsLambdaServiceRole57C5577D"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "CloudMoviesStack/getSeasonsDetailsLambda/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "getSeasonsDetailsLambda73515D71": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     "S3Key": "bbb3d5da4b001d0e5af526d10d89ccf843e89c1ba5754d713722fe7b858ba879.zip"
    },
    "Environment": {
     "Variables": {
      "VIDEOS_TABLE": {
       "Ref": "videosTableBCC40D2B"
      }
     }
    },
    "Handler": "get_seasons_details.handler",
    "MemorySize": 128,
    "Role": {
     "Fn::GetAtt": [
      "getSeasonsDetailsLambdaServiceRole57C5577D",
      "Arn"
     ]
    },
    "Runtime": "python3.9",
    "Timeout": 10
   },
   "DependsOn": [
    "getSeasonsDetailsLambdaServiceRoleDefaultPolicy7CA9C367",
    "getSeasonsDetailsLambdaServiceRole57C5577D"
   ],
   "Metadata": {
    "aws:cdk:path": "CloudMoviesStack/getSeasonsDetailsLambda/Resource",
    "aws:asset:path": "asset.bbb3d5da4b001d0e5af526d10d89ccf843e89c1ba5754d713722fe7b858ba879",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Code"
   }
  },
  "getEpisodeDetailsLambdaServiceRole4EDAC85E": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "CloudMoviesStack/getEpisodeDetailsLambda/ServiceRole/Resource"
   }
  },
  "getEpisodeDetailsLambdaServiceRoleDefaultPolicyF281FC65": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "dynamodb:BatchGetItem",
        "dynamodb:ConditionCheckItem",
        "dynamodb:DescribeTable",
        "dynamodb:GetItem",
        "dynamodb:GetRecords",
        "dynamodb:GetShardIterator",
        "dynamodb:Query",
        "dynamodb:Scan"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "videosTableBCC40D2B",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "videosTableBCC40D2B",
             "Arn"
            ]
           },
           "/index/*"
          ]
         ]
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "getEpisodeDetailsLambdaServiceRoleDefaultPolicyF281FC65",
    "Roles": [
     {
      "Ref": "getEpisodeDetailsLambdaServiceRole4EDAC85E"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "CloudMoviesStack/getEpisodeDetailsLambda/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "getEpisodeDetailsLambdaF0EDC814": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     "S3Key": "4b9653d8e02f9314bc13c1f3068b778c0467e8554b1da714e9150ca4f07ab4bd.zip"
    },
    "Environment": {
     "Variables": {
      "VIDEOS_TABLE": {
       "Ref": "videosTableBCC40D2B"
      }
     }
    },
    "Handler": "get_episode_details.handler",
    "MemorySize": 128,
    "Role": {
     "Fn::GetAtt": [
      "getEpisodeDetailsLambdaServiceRole4EDAC85E",
      "Arn"
     ]
    },
    "Runtime": "python3.9",
    "Timeout": 10
   },
   "DependsOn": [
    "getEpisodeDetailsLambdaServiceRoleDefaultPolicyF281FC65",
    "getEpisodeDetailsLambdaServiceRole4EDAC85E"
   ],
   "Metadata": {
    "aws:cdk:path": "CloudMoviesStack/getEpisodeDetailsLambda/Resource",
    "aws:asset:path": "asset.4b9653d8e02f9314bc13c1f3068b778c0467e8554b1da714e9150ca4f07ab4bd",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Code"
   }
  },
  "createShowLambdaServiceRoleB610ADA4": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "CloudMoviesStack/createShowLambda/ServiceRole/Resource"
   }
  },
  "createShowLambdaServiceRoleDefaultPolicy1E2158A5": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "dynamodb:BatchGetItem",
        "dynamodb:BatchWriteItem",
        "dynamodb:ConditionCheckItem",
        "dynamodb:DeleteItem",
        "dynamodb:DescribeTable",
        "dynamodb:GetItem",
        "dynamodb:GetRecords",
        "dynamodb:GetShardIterator",
        "dynamodb:PutItem",
        "dynamodb:Query",
        "dynamodb:Scan",
        "dynamodb:UpdateItem"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "videosTableBCC40D2B",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "videosTableBCC40D2B",
             "Arn"
            ]
           },
           "/index/*"
          ]
         ]
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "createShowLambdaServiceRoleDefaultPolicy1E2158A5",
    "Roles": [
     {
      "Ref": "createShowLambdaServiceRoleB610ADA4"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "CloudMoviesStack/createShowLambda/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "createShowLambda64A8046E": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     "S3Key": "04d108dbbcf8db637f13d2a3877fe04956e8557290744f0a5b8046ced6e482bc.zip"
    },
    "Environment": {
     "Variables": {
      "VIDEOS_TABLE": {
       "Ref": "videosTableBCC40D2B"
      }
     }
    },
    "Handler": "create_show.handler",
    "MemorySize": 128,
    "Role": {
     "Fn::GetAtt": [
      "createShowLambdaServiceRoleB610ADA4",
      "Arn"
     ]
    },
    "Runtime": "python3.9",
    "Timeout": 10
   },
   "DependsOn": [
    "createShowLambdaServiceRoleDefaultPolicy1E2158A5",
    "createShowLambdaServiceRoleB610ADA4"
   ],
   "Metadata": {
    "aws:cdk:path": "CloudMoviesStack/createShowLambda/Resource",
    "aws:asset:path": "asset.04d108dbbcf8db637f13d2a3877fe04956e8557290744f0a5b8046ced6e482bc",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Code"
   }
  },
  "createSeasonLambdaServiceRole7234FCF8": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "CloudMoviesStack/createSeasonLambda/ServiceRole/Resource"
   }
  },
  "createSeasonLambdaServiceRoleDefaultPolicyE5AB1EC8": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "dynamodb:BatchGetItem",
        "dynamodb:BatchWriteItem",
        "dynamodb:ConditionCheckItem",
        "dynamodb:DeleteItem",
        "dynamodb:DescribeTable",
        "dynamodb:GetItem",
        "dynamodb:GetRecords",
        "dynamodb:GetShardIterator",
        "dynamodb:PutItem",
        "dynamodb:Query",
        "dynamodb:Scan",
        "dynamodb:UpdateItem"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "videosTableBCC40D2B",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "videosTableBCC40D2B",
             "Arn"
            ]
           },
           "/index/*"
          ]
         ]
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "createSeasonLambdaServiceRoleDefaultPolicyE5AB1EC8",
    "Roles": [
     {
      "Ref": "createSeasonLambdaServiceRole7234FCF8"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "CloudMoviesStack/createSeasonLambda/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "createSeasonLambdaB8377D0D": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     "S3Key": "e96491383c3ef490f5a12570c94c5e56b627a74535e72c966a18e62b7fb1f0c3.zip"
    },
    "Environment": {
     "Variables": {
      "VIDEOS_TABLE": {
       "Ref": "videosTableBCC40D2B"
      }
     }
    },
    "Handler": "create_season.handler",
    "MemorySize": 128,
    "Role": {
     "Fn::GetAtt": [
      "createSeasonLambdaServiceRole7234FCF8",
      "Arn"
     ]
    },
    "Runtime": "python3.9",
    "Timeout": 10
   },
   "DependsOn": [
    "createSeasonLambdaServiceRoleDefaultPolicyE5AB1EC8",
    "createSeasonLambdaServiceRole7234FCF8"
   ],
   "Metadata": {
    "aws:cdk:path": "CloudMoviesStack/createSeasonLambda/Resource",
    "aws:asset:path": "asset.e96491383c3ef490f5a12570c94c5e56b627a74535e72c966a18e62b7fb1f0c3",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Code"
   }
  },
  "editDetailsLambdaServiceRole1AFC67A8": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "CloudMoviesStack/editDetailsLambda/ServiceRole/Resource"
   }
  },
  "editDetailsLambdaServiceRoleDefaultPolicy4BA15104": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "dynamodb:BatchGetItem",
        "dynamodb:BatchWriteItem",
        "dynamodb:ConditionCheckItem",
        "dynamodb:DeleteItem",
        "dynamodb:DescribeTable",
        "dynamodb:GetItem",
        "dynamodb:GetRecords",
        "dynamodb:GetShardIterator",
        "dynamodb:PutItem",
        "dynamodb:Query",
        "dynamodb:Scan",
        "dynamodb:UpdateItem"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "videosTableBCC40D2B",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "videosTableBCC40D2B",
             "Arn"
            ]
           },
           "/index/*"
          ]
         ]
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "editDetailsLambdaServiceRoleDefaultPolicy4BA15104",
    "Roles": [
     {
      "Ref": "editDetailsLambdaServiceRole1AFC67A8"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "CloudMoviesStack/editDetailsLambda/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "editDetailsLambda56648A07": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     "S3Key": "aed09bbed6c063810c9a5a7755e1b317d16d0c74bb1a31d96d8fa2b9a5f02c3f.zip"
    },
    "Environment": {
     "Variables": {
      "VIDEOS_TABLE": {
       "Ref": "videosTableBCC40D2B"
      }
     }
    },
    "Handler": "edit_details.handler",
    "MemorySize": 128,
    "Role": {
     "Fn::GetAtt": [
      "editDetailsLambdaServiceRole1AFC67A8",
      "Arn"
     ]
    },
    "Runtime": "python3.9",
    "Timeout": 10
   },
   "DependsOn": [
    "editDetailsLambdaServiceRoleDefaultPolicy4BA15104",
    "editDetailsLambdaServiceRole1AFC67A8"
   ],
   "Metadata": {
    "aws:cdk:path": "CloudMoviesStack/editDetailsLambda/Resource",
    "aws:asset:path": "asset.aed09bbed6c063810c9a5a7755e1b317d16d0c74bb1a31d96d8fa2b9a5f02c3f",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Code"
   }
  },
  "editEpisodeLambdaServiceRoleBF877A38": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "CloudMoviesStack/editEpisodeLambda/ServiceRole/Resource"
   }
  },
  "editEpisodeLambdaServiceRoleDefaultPolicyD62A0672": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "dynamodb:BatchGetItem",
        "dynamodb:BatchWriteItem",
        "dynamodb:ConditionCheckItem",
        "dynamodb:DeleteItem",
        "dynamodb:DescribeTable",
        "dynamodb:GetItem",
        "dynamodb:GetRecords",
        "dynamodb:GetShardIterator",
        "dynamodb:PutItem",
        "dynamodb:Query",
        "dynamodb:Scan",
        "dynamodb:UpdateItem"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "videosTableBCC40D2B",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "videosTableBCC40D2B",
             "Arn"
            ]
           },
           "/index/*"
          ]
         ]
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "editEpisodeLambdaServiceRoleDefaultPolicyD62A0672",
    "Roles": [
     {
      "Ref": "editEpisodeLambdaServiceRoleBF877A38"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "CloudMoviesStack/editEpisodeLambda/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "editEpisodeLambdaD97CF2B4": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     "S3Key": "3a46e12fa067a01e1a86c1cd0da24226a950d0dd05e490882760c57ecc0f51a5.zip"
    },
    "Environment": {
     "Variables": {
      "VIDEOS_TABLE": {
       "Ref": "videosTableBCC40D2B"
      }
     }
    },
    "Handler": "edit_episode.handler",
    "MemorySize": 128,
    "Role": {
     "Fn::GetAtt": [
      "editEpisodeLambdaServiceRoleBF877A38",
      "Arn"
     ]
    },
    "Runtime": "python3.9",
    "Timeout": 10
   },
   "DependsOn": [
    "editEpisodeLambdaServiceRoleDefaultPolicyD62A0672",
    "editEpisodeLambdaServiceRoleBF877A38"
   ],
   "Metadata": {
    "aws:cdk:path": "CloudMoviesStack/editEpisodeLambda/Resource",
    "aws:asset:path": "asset.3a46e12fa067a01e1a86c1cd0da24226a950d0dd05e490882760c57ecc0f51a5",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Code"
   }
  },
  "deleteShowLambdaServiceRole91DBB5FC": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "CloudMoviesStack/deleteShowLambda/ServiceRole/Resource"
   }
  },
  "deleteShowLambdaServiceRoleDefaultPolicy7DC4F099": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "dynamodb:BatchGetItem",
        "dynamodb:BatchWriteItem",
        "dynamodb:ConditionCheckItem",
        "dynamodb:DeleteItem",
        "dynamodb:DescribeTable",
        "dynamodb:GetItem",
        "dynamodb:GetRecords",
        "dynamodb:GetShardIterator",
        "dynamodb:PutItem",
        "dynamodb:Query",
        "dynamodb:Scan",
        "dynamodb:UpdateItem"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "videosTableBCC40D2B",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "videosTableBCC40D2B",
             "Arn"
            ]
           },
           "/index/*"
          ]
         ]
        }
       ]
      },
      {
       "Action": "s3:DeleteObject*",
       "Effect": "Allow",
       "Resource": {
        "Fn::Join": [
         "",
         [
          {
           "Fn::GetAtt": [
            "publishBucketBD758787",
            "Arn"
           ]
          },
          "/*"
         ]
        ]
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "deleteShowLambdaServiceRoleDefaultPolicy7DC4F099",
    "Roles": [
     {
      "Ref": "deleteShowLambdaServiceRole91DBB5FC"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "CloudMoviesStack/deleteShowLambda/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "deleteShowLambdaDE5B7ABF": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     "S3Key": "476919fc2ea4aef97d717fcfdf86e3e7109714f3b918fbe4c5faded02d9663e4.zip"
    },
    "Environment": {
     "Variables": {
      "VIDEOS_TABLE": {
       "Ref": "videosTableBCC40D2B"
      },
      "PUBLISH_BUCKET": {
       "Ref": "publishBucketBD758787"
      }
     }
    },
    "Handler": "delete_show.handler",
    "MemorySize": 128,
    "Role": {
     "Fn::GetAtt": [
      "deleteShowLambdaServiceRole91DBB5FC",
      "Arn"
     ]
    },
    "Runtime": "python3.9",
    "Timeout": 10
   },
   "DependsOn": [
    "deleteShowLambdaServiceRoleDefaultPolicy7DC4F099",
    "deleteShowLambdaServiceRole91DBB5FC"
   ],
   "Metadata": {
    "aws:cdk:path": "CloudMoviesStack/deleteShowLambda/Resource",
    "aws:asset:path": "asset.476919fc2ea4aef97d717fcfdf86e3e7109714f3b918fbe4c5faded02d9663e4",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Code"
   }
  },
  "deleteSeasonLambdaServiceRoleDAA94112": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "CloudMoviesStack/deleteSeasonLambda/ServiceRole/Resource"
   }
  },
  "deleteSeasonLambdaServiceRoleDefaultPolicyF52D2B58": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "dynamodb:BatchGetItem",
        "dynamodb:BatchWriteItem",
        "dynamodb:ConditionCheckItem",
        "dynamodb:DeleteItem",
        "dynamodb:DescribeTable",
        "dynamodb:GetItem",
        "dynamodb:GetRecords",
        "dynamodb:GetShardIterator",
        "dynamodb:PutItem",
        "dynamodb:Query",
        "dynamodb:Scan",
        "dynamodb:UpdateItem"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "videosTableBCC40D2B",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "videosTableBCC40D2B",
             "Arn"
            ]
           },
           "/index/*"
          ]
         ]
        }
       ]
      },
      {
       "Action": "s3:DeleteObject*",
       "Effect": "Allow",
       "Resource": {
        "Fn::Join": [
         "",
         [
          {
           "Fn::GetAtt": [
            "publishBucketBD758787",
            "Arn"
           ]
          },
          "/*"
         ]
        ]
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "deleteSeasonLambdaServiceRoleDefaultPolicyF52D2B58",
    "Roles": [
     {
      "Ref": "deleteSeasonLambdaServiceRoleDAA94112"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "CloudMoviesStack/deleteSeasonLambda/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "deleteSeasonLambda85B56115": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     "S3Key": "712a7444a70e90cd302f3e07d3bcf259f7c036f76f0ce0c268a1d6d67c27a444.zip"
    },
    "Environment": {
     "Variables": {
      "VIDEOS_TABLE": {
       "Ref": "videosTableBCC40D2B"
      },
      "PUBLISH_BUCKET": {
       "Ref": "publishBucketBD758787"
      }
     }
    },
    "Handler": "delete_season.handler",
    "MemorySize": 128,
    "Role": {
     "Fn::GetAtt": [
      "deleteSeasonLambdaServiceRoleDAA94112",
      "Arn"
     ]
    },
    "Runtime": "python3.9",
    "Timeout": 10
   },
   "DependsOn": [
    "deleteSeasonLambdaServiceRoleDefaultPolicyF52D2B58",
    "deleteSeasonLambdaServiceRoleDAA94112"
   ],
   "Metadata": {
    "aws:cdk:path": "CloudMoviesStack/deleteSeasonLambda/Resource",
    "aws:asset:path": "asset.712a7444a70e90cd302f3e07d3bcf259f7c036f76f0ce0c268a1d6d67c27a444",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Code"
   }
  },
  "deleteEpisodeLambdaServiceRole93483ADD": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "CloudMoviesStack/deleteEpisodeLambda/ServiceRole/Resource"
   }
  },
  "deleteEpisodeLambdaServiceRoleDefaultPolicy2891B7B0": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "dynamodb:BatchGetItem",
        "dynamodb:BatchWriteItem",
        "dynamodb:ConditionCheckItem",
        "dynamodb:DeleteItem",
        "dynamodb:DescribeTable",
        "dynamodb:GetItem",
        "dynamodb:GetRecords",
        "dynamodb:GetShardIterator",
        "dynamodb:PutItem",
        "dynamodb:Query",
        "dynamodb:Scan",
        "dynamodb:UpdateItem"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "videosTableBCC40D2B",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "videosTableBCC40D2B",
             "Arn"
            ]
           },
           "/index/*"
          ]
         ]
        }
       ]
      },
      {
       "Action": "s3:DeleteObject*",
       "Effect": "Allow",
       "Resource": {
        "Fn::Join": [
         "",
         [
          {
           "Fn::GetAtt": [
            "publishBucketBD758787",
            "Arn"
           ]
          },
          "/*"
         ]
        ]
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "deleteEpisodeLambdaServiceRoleDefaultPolicy2891B7B0",
    "Roles": [
     {
      "Ref": "deleteEpisodeLambdaServiceRole93483ADD"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "CloudMoviesStack/deleteEpisodeLambda/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "deleteEpisodeLambda5735F8A0": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     "S3Key": "4ec8fb01f41f7d5e40b69c3a08dab654d387bdb1c17ca31a5f891f5b6d480ca8.zip"
    },
    "Environment": {
     "Variables": {
      "VIDEOS_TABLE": {
       "Ref": "videosTableBCC40D2B"
      },
      "PUBLISH_BUCKET": {
       "Ref": "publishBucketBD758787"
      }
     }
    },
    "Handler": "delete_episode.handler",
    "MemorySize": 128,
    "Role": {
     "Fn::GetAtt": [
      "deleteEpisodeLambdaServiceRole93483ADD",
      "Arn"
     ]
    },
    "Runtime": "python3.9",
    "Timeout": 10
   },
   "DependsOn": [
    "deleteEpisodeLambdaServiceRoleDefaultPolicy2891B7B0",
    "deleteEpisodeLambdaServiceRole93483ADD"
   ],
   "Metadata": {
    "aws:cdk:path": "CloudMoviesStack/deleteEpisodeLambda/Resource",
    "aws:asset:path": "asset.4ec8fb01f41f7d5e40b69c3a08dab654d387bdb1c17ca31a5f891f5b6d480ca8",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Code"
   }
  },
  "deleteMovieLambdaServiceRole18A98B24": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "CloudMoviesStack/deleteMovieLambda/ServiceRole/Resource"
   }
  },
  "deleteMovieLambdaServiceRoleDefaultPolicy9A6A0C78": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "dynamodb:BatchGetItem",
        "dynamodb:BatchWriteItem",
        "dynamodb:ConditionCheckItem",
        "dynamodb:DeleteItem",
        "dynamodb:DescribeTable",
        "dynamodb:GetItem",
        "dynamodb:GetRecords",
        "dynamodb:GetShardIterator",
        "dynamodb:PutItem",
        "dynamodb:Query",
        "dynamodb:Scan",
        "dynamodb:UpdateItem"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "videosTableBCC40D2B",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "videosTableBCC40D2B",
             "Arn"
            ]
           },
           "/index/*"
          ]
         ]
        }
       ]
      },
      {
       "Action": "s3:DeleteObject*",
       "Effect": "Allow",
       "Resource": {
        "Fn::Join": [
         "",
         [
          {
           "Fn::GetAtt": [
            "publishBucketBD758787",
            "Arn"
           ]
          },
          "/*"
         ]
        ]
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "deleteMovieLambdaServiceRoleDefaultPolicy9A6A0C78",
    "Roles": [
     {
      "Ref": "deleteMovieLambdaServiceRole18A98B24"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "CloudMoviesStack/deleteMovieLambda/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "deleteMovieLambda63D1CEAD": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     "S3Key": "0402440f4dd515bfb3690a13029abafb6e97e3382bc2db55381b5b5c25cc1210.zip"
    },
    "Environment": {
     "Variables": {
      "VIDEOS_TABLE": {
       "Ref": "videosTableBCC40D2B"
      },
      "PUBLISH_BUCKET": {
       "Ref": "publishBucketBD758787"
      }
     }
    },
    "Handler": "delete_movie.handler",
    "MemorySize": 128,
    "Role": {
     "Fn::GetAtt": [
      "deleteMovieLambdaServiceRole18A98B24",
      "Arn"
     ]
    },
    "Runtime": "python3.9",
    "Timeout": 10
   },
   "DependsOn": [
    "deleteMovieLambdaServiceRoleDefaultPolicy9A6A0C78",
    "deleteMovieLambdaServiceRole18A98B24"
   ],
   "Metadata": {
    "aws:cdk:path": "CloudMoviesStack/deleteMovieLambda/Resource",
    "aws:asset:path": "asset.0402440f4dd515bfb3690a13029abafb6e97e3382bc2db55381b5b5c25cc1210",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Code"
   }
  },
  "getFeedLambdaServiceRole581C19F8": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "CloudMoviesStack/getFeedLambda/ServiceRole/Resource"
   }
  },
  "getFeedLambdaServiceRoleDefaultPolicyD682A319": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "dynamodb:BatchGetItem",
        "dynamodb:ConditionCheckItem",
        "dynamodb:DescribeTable",
        "dynamodb:GetItem",
        "dynamodb:GetRecords",
        "dynamodb:GetShardIterator",
        "dynamodb:Query",
        "dynamodb:Scan"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "feedsTable2B322F8D",
          "Arn"
         ]
        },
        {
         "Fn::GetAtt": [
          "videosTableBCC40D2B",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "videosTableBCC40D2B",
             "Arn"
            ]
           },
           "/index/*"
          ]
         ]
        },
        {
         "Ref": "AWS::NoValue"
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "getFeedLambdaServiceRoleDefaultPolicyD682A319",
    "Roles": [
     {
      "Ref": "getFeedLambdaServiceRole581C19F8"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "CloudMoviesStack/getFeedLambda/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "getFeedLambdaB4EE3C95": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     "S3Key": "754a899f3bcc08f397f8401f5379be90944e6e9dbb7a950aeed37ecb665ee080.zip"
    },
    "Environment": {
     "Variables": {
      "FEEDS_TABLE": {
       "Ref": "feedsTable2B322F8D"
      },
      "VIDEOS_TABLE": {
       "Ref": "videosTableBCC40D2B"
      }
     }
    },
    "Handler": "get_feed.handler",
    "MemorySize": 128,
    "Role": {
     "Fn::GetAtt": [
      "getFeedLambdaServiceRole581C19F8",
      "Arn"
     ]
    },
    "Runtime": "python3.9",
    "Timeout": 10
   },
   "DependsOn": [
    "getFeedLambdaServiceRoleDefaultPolicyD682A319",
    "getFeedLambdaServiceRole581C19F8"
   ],
   "Metadata": {
    "aws:cdk:path": "CloudMoviesStack/getFeedLambda/Resource",
    "aws:asset:path": "asset.754a899f3bcc08f397f8401f5379be90944e6e9dbb7a950aeed37ecb665ee080",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Code"
   }
  },
  "unzipvideolambdaLambdaServiceRoleE83CCEB3": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "CloudMoviesStack/unzipvideolambdaLambda/ServiceRole/Resource"
   }
  },
  "unzipvideolambdaLambdaServiceRoleDefaultPolicy09D6CAF8": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "dynamodb:BatchWriteItem",
        "dynamodb:DeleteItem",
        "dynamodb:DescribeTable",
        "dynamodb:PutItem",
        "dynamodb:UpdateItem"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "videosTableBCC40D2B",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "videosTableBCC40D2B",
             "Arn"
            ]
           },
           "/index/*"
          ]
         ]
        }
       ]
      },
      {
       "Action": [
        "s3:Abort*",
        "s3:DeleteObject*",
        "s3:GetBucket*",
        "s3:GetObject*",
        "s3:List*",
        "s3:PutObject",
        "s3:PutObjectLegalHold",
        "s3:PutObjectRetention",
        "s3:PutObjectTagging",
        "s3:PutObjectVersionTagging"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "sourceBucket5C83C9D6",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "sourceBucket5C83C9D6",
             "Arn"
            ]
           },
           "/*"
          ]
         ]
        }
       ]
      },
      {
       "Action": "sns:Publish",
       "Effect": "Allow",
       "Resource": {
        "Ref": "sourceUploadProcessingTopic119D2B2E"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "unzipvideolambdaLambdaServiceRoleDefaultPolicy09D6CAF8",
    "Roles": [
     {
      "Ref": "unzipvideolambdaLambdaServiceRoleE83CCEB3"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "CloudMoviesStack/unzipvideolambdaLambda/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "unzipvideolambdaLambda21A9B6C9": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     "S3Key": "da1a170efee5cfd10e51ccbaae6c878602082f7918c0db1a2613aa8735dfb4d6.zip"
    },
    "Environment": {
     "Variables": {
      "VIDEOS_TABLE": {
       "Ref": "videosTableBCC40D2B"
      },
      "EXTENSIONS": "mp4,mov,m4v",
      "FAILED_TOPIC_ARN": {
       "Ref": "sourceUploadProcessingTopic119D2B2E"
      }
     }
    },
    "Handler": "unzip_video.handler",
    "MemorySize": 128,
    "Role": {
     "Fn::GetAtt": [
      "unzipvideolambdaLambdaServiceRoleE83CCEB3",
      "Arn"
     ]
    },
    "Runtime": "python3.9",
    "Timeout": 10
   },
   "DependsOn": [
    "unzipvideolambdaLambdaServiceRoleDefaultPolicy09D6CAF8",
    "unzipvideolambdaLambdaServiceRoleE83CCEB3"
   ],
   "Metadata": {
    "aws:cdk:path": "CloudMoviesStack/unzipvideolambdaLambda/Resource",
    "aws:asset:path": "asset.da1a170efee5cfd10e51ccbaae6c878602082f7918c0db1a2613aa8735dfb4d6",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Code"
   }
  },
  "BucketNotificationsHandler050a0587b7544547bf325f094a3db834RoleB6FB88EC": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "CloudMoviesStack/BucketNotificationsHandler050a0587b7544547bf325f094a3db834/Role/Resource"
   }
  },
  "BucketNotificationsHandler050a0587b7544547bf325f094a3db834RoleDefaultPolicy2CF63D36": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": "s3:PutBucketNotification",
       "Effect": "Allow",
       "Resource": "*"
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "BucketNotificationsHandler050a0587b7544547bf325f094a3db834RoleDefaultPolicy2CF63D36",
    "Roles": [
     {
      "Ref": "BucketNotificationsHandler050a0587b7544547bf325f094a3db834RoleB6FB88EC"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "CloudMoviesStack/BucketNotificationsHandler050a0587b7544547bf325f094a3db834/Role/DefaultPolicy/Resource"
   }
  },
  "BucketNotificationsHandler050a0587b7544547bf325f094a3db8347ECC3691": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Description": "AWS CloudFormation handler for \"Custom::S3BucketNotifications\" resources (@aws-cdk/aws-s3)",
    "Code": {
     "ZipFile": "import boto3  # type: ignore\nimport json\nimport logging\nimport urllib.request\n\ns3 = boto3.client(\"s3\")\n\nEVENTBRIDGE_CONFIGURATION = 'EventBridgeConfiguration'\nCONFIGURATION_TYPES = [\"TopicConfigurations\", \"QueueConfigurations\", \"LambdaFunctionConfigurations\"]\n\ndef handler(event: dict, context):\n  response_status = \"SUCCESS\"\n  error_message = \"\"\n  try:\n    props = event[\"ResourceProperties\"]\n    notification_configuration = props[\"NotificationConfiguration\"]\n    managed = props.get('Managed', 'true').lower() == 'true'\n    stack_id = event['StackId']\n    old = event.get(\"OldResourceProperties\", {}).get(\"NotificationConfiguration\", {})\n    if managed:\n      config = handle_managed(event[\"RequestType\"], notification_configuration)\n    else:\n      config = handle_unmanaged(props[\"BucketName\"], stack_id, event[\"RequestType\"], notification_configuration, old)\n    s3.put_bucket_notification_configuration(Bucket=props[\"BucketName\"], NotificationConfiguration=config)\n  except Exception as e:\n    logging.exception(\"Failed to put bucket notification configuration\")\n    response_status = \"FAILED\"\n    error_message = f\"Error: {str(e)}. \"\n  finally:\n    submit_response(event, context, response_status, error_message)\n\ndef handle_managed(request_type, notification_configuration):\n  if request_type == 'Delete':\n    return {}\n  return notification_configuration\n\ndef handle_unmanaged(bucket, stack_id, request_type, notification_configuration, old):\n  def with_id(n):\n    n['Id'] = f\"{stack_id}-{hash(json.dumps(n, sort_keys=True))}\"\n    return n\n\n  external_notifications = {}\n  existing_notifications = s3.get_bucket_notification_configuration(Bucket=bucket)\n  for t in CONFIGURATION_TYPES:\n    if request_type == 'Update':\n        ids = [with_id(n) for n in old.get(t, [])]\n        old_incoming_ids = [n['Id'] for n in ids]\n        external_notifications[t] = [n for n in existing_notifications.get(t, []) if not n['Id'] in old_incoming_ids]\n    elif request_type == 'Delete':\n        external_notifications[t] = [n for n in existing_notifications.get(t, []) if not n['Id'].startswith(f\"{stack_id}-\")]\n    elif request_type == 'Create':\n        external_notifications[t] = [n for n in existing_notifications.get(t, [])]\n  if EVENTBRIDGE_CONFIGURATION in existing_notifications:\n    external_notifications[EVENTBRIDGE_CONFIGURATION] = existing_notifications[EVENTBRIDGE_CONFIGURATION]\n\n  if request_type == 'Delete':\n    return external_notifications\n\n  notifications = {}\n  for t in CONFIGURATION_TYPES:\n    external = external_notifications.get(t, [])\n    incoming = [with_id(n) for n in notification_configuration.get(t, [])]\n    notifications[t] = external + incoming\n\n  if EVENTBRIDGE_CONFIGURATION in notification_configuration:\n    notifications[EVENTBRIDGE_CONFIGURATION] = notification_configuration[EVENTBRIDGE_CONFIGURATION]\n  elif EVENTBRIDGE_CONFIGURATION in external_notifications:\n    notifications[EVENTBRIDGE_CONFIGURATION] = external_notifications[EVENTBRIDGE_CONFIGURATION]\n\n  return notifications\n\ndef submit_response(event: dict, context, response_status: str, error_message: str):\n  response_body = json.dumps(\n    {\n      \"Status\": response_status,\n      \"Reason\": f\"{error_message}See the details in CloudWatch Log Stream: {context.log_stream_name}\",\n      \"PhysicalResourceId\": event.get(\"PhysicalResourceId\") or event[\"LogicalResourceId\"],\n      \"StackId\": event[\"StackId\"],\n      \"RequestId\": event[\"RequestId\"],\n      \"LogicalResourceId\": event[\"LogicalResourceId\"],\n      \"NoEcho\": False,\n    }\n  ).encode(\"utf-8\")\n  headers = {\"content-type\": \"\", \"content-length\": str(len(response_body))}\n  try:\n    req = urllib.request.Request(url=event[\"ResponseURL\"], headers=headers, data=response_body, method=\"PUT\")\n    with urllib.request.urlopen(req) as response:\n      print(response.read().decode(\"utf-8\"))\n    print(\"Status code: \" + response.reason)\n  except Exception as e:\n      print(\"send(..) failed executing request.urlopen(..): \" + str(e))\n"
    },
    "Handler": "index.handler",
    "Role": {
     "Fn::GetAtt": [
      "BucketNotificationsHandler050a0587b7544547bf325f094a3db834RoleB6FB88EC",
      "Arn"
     ]
    },
    "Runtime": "python3.11",
    "Timeout": 300
   },
   "DependsOn": [
    "BucketNotificationsHandler050a0587b7544547bf325f094a3db834RoleDefaultPolicy2CF63D36",
    "BucketNotificationsHandler050a0587b7544547bf325f094a3db834RoleB6FB88EC"
   ],
   "Metadata": {
    "aws:cdk:path": "CloudMoviesStack/BucketNotificationsHandler050a0587b7544547bf325f094a3db834/Resource"
   }
  },
  "ffmpegLayerE970AD5E": {
   "Type": "AWS::Lambda::LayerVersion",
   "Properties": {
    "CompatibleRuntimes": [
     "python3.9"
    ],
    "Content": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     "S3Key": "e9d3ac6e04486a38d3bc9c11c8c1496d20d63a0379e6de211698f41b6deffe30.zip"
    }
   },
   "Metadata": {
    "aws:cdk:path": "CloudMoviesStack/ffmpegLayer/Resource",
    "aws:asset:path": "asset.e9d3ac6e04486a38d3bc9c11c8c1496d20d63a0379e6de211698f41b6deffe30",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Content"
   }
  },
  "transcodevideolambdaLambdaServiceRole49831FF4": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "CloudMoviesStack/transcodevideolambdaLambda/ServiceRole/Resource"
   }
  },
  "transcodevideolambdaLambdaServiceRoleDefaultPolicyF686B00A": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "s3:GetBucket*",
        "s3:GetObject*",
        "s3:List*"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "sourceBucket5C83C9D6",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "sourceBucket5C83C9D6",
             "Arn"
            ]
           },
           "/*"
          ]
         ]
        }
       ]
      },
      {
       "Action": [
        "s3:Abort*",
        "s3:DeleteObject*",
        "s3:PutObject",
        "s3:PutObjectLegalHold",
        "s3:PutObjectRetention",
        "s3:PutObjectTagging",
        "s3:PutObjectVersionTagging"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "publishBucketBD758787",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "publishBucketBD758787",
             "Arn"
            ]
           },
           "/*"
          ]
         ]
        }
       ]
      },
      {
       "Action": "sns:Publish",
       "Effect": "Allow",
       "Resource": {
        "Ref": "sourceUploadProcessingTopic119D2B2E"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "transcodevideolambdaLambdaServiceRoleDefaultPolicyF686B00A",
    "Roles": [
     {
      "Ref": "transcodevideolambdaLambdaServiceRole49831FF4"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "CloudMoviesStack/transcodevideolambdaLambda/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "transcodevideolambdaLambda131AAF32": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     "S3Key": "6511acbc80785ff234a7f7cab94337b4a4f8aa21735602d365fa986ce837d975.zip"
    },
    "Environment": {
     "Variables": {
      "SOURCE_BUCKET": {
       "Ref": "sourceBucket5C83C9D6"
      },
      "PUBLISH_BUCKET": {
       "Ref": "publishBucketBD758787"
      }
     }
    },
    "Handler": "transcode_video.handler",
    "Layers": [
     {
      "Ref": "ffmpegLayerE970AD5E"
     }
    ],
    "MemorySize": 1024,
    "Role": {
     "Fn::GetAtt": [
      "transcodevideolambdaLambdaServiceRole49831FF4",
      "Arn"
     ]
    },
    "Runtime": "python3.9",
    "Timeout": 900
   },
   "DependsOn": [
    "transcodevideolambdaLambdaServiceRoleDefaultPolicyF686B00A",
    "transcodevideolambdaLambdaServiceRole49831FF4"
   ],
   "Metadata": {
    "aws:cdk:path": "CloudMoviesStack/transcodevideolambdaLambda/Resource",
    "aws:asset:path": "asset.6511acbc80785ff234a7f7cab94337b4a4f8aa21735602d365fa986ce837d975",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Code"
   }
  },
  "transcodingStateMachineRole3CDDD4E2": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "states.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    }
   },
   "Metadata": {
    "aws:cdk:path": "CloudMoviesStack/transcodingStateMachine/Role/Resource"
   }
  },
  "transcodingStateMachineRoleDefaultPolicy71D5302A": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": "sns:Publish",
       "Effect": "Allow",
       "Resource": {
        "Ref": "sourceUploadProcessingTopic119D2B2E"
       }
      },
      {
       "Action": "lambda:InvokeFunction",
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "transcodevideolambdaLambda131AAF32",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "transcodevideolambdaLambda131AAF32",
             "Arn"
            ]
           },
           ":*"
          ]
         ]
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "transcodingStateMachineRoleDefaultPolicy71D5302A",
    "Roles": [
     {
      "Ref": "transcodingStateMachineRole3CDDD4E2"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "CloudMoviesStack/transcodingStateMachine/Role/DefaultPolicy/Resource"
   }
  },
  "transcodingStateMachine0BE86125": {
   "Type": "AWS::StepFunctions::StateMachine",
   "Properties": {
    "DefinitionString": {
     "Fn::Join": [
      "",
      [
       "{\"StartAt\":\"parallelTranscoding\",\"States\":{\"parallelTranscoding\":{\"Type\":\"Parallel\",\"Next\":\"publishSuccessfulTranscoding\",\"Catch\":[{\"ErrorEquals\":[\"States.ALL\"],\"ResultPath\":\"$.errorInfo\",\"Next\":\"publishFailedTranscoding\"}],\"Branches\":[{\"StartAt\":\"transcoding360\",\"States\":{\"transcoding360\":{\"End\":true,\"Retry\":[{\"ErrorEquals\":[\"Lambda.ClientExecutionTimeoutException\",\"Lambda.ServiceException\",\"Lambda.AWSLambdaException\",\"Lambda.SdkClientException\"],\"IntervalSeconds\":2,\"MaxAttempts\":6,\"BackoffRate\":2},{\"ErrorEquals\":[\"States.ALL\"],\"MaxAttempts\":3,\"BackoffRate\":2}],\"Type\":\"Task\",\"Resource\":\"arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":states:::lambda:invoke\",\"Parameters\":{\"FunctionName\":\"",
       {
        "Fn::GetAtt": [
         "transcodevideolambdaLambda131AAF32",
         "Arn"
        ]
       },
       "\",\"Payload\":{\"resolution\":\"360\",\"objectKey.$\":\"$.objectKey\",\"timestamp.$\":\"$.timestamp\"}}}}},{\"StartAt\":\"transcoding480\",\"States\":{\"transcoding480\":{\"End\":true,\"Retry\":[{\"ErrorEquals\":[\"Lambda.ClientExecutionTimeoutException\",\"Lambda.ServiceException\",\"Lambda.AWSLambdaException\",\"Lambda.SdkClientException\"],\"IntervalSeconds\":2,\"MaxAttempts\":6,\"BackoffRate\":2},{\"ErrorEquals\":[\"States.ALL\"],\"MaxAttempts\":3,\"BackoffRate\":2}],\"Type\":\"Task\",\"Resource\":\"arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":states:::lambda:invoke\",\"Parameters\":{\"FunctionName\":\"",
       {
        "Fn::GetAtt": [
         "transcodevideolambdaLambda131AAF32",
         "Arn"
        ]
       },
       "\",\"Payload\":{\"resolution\":\"480\",\"objectKey.$\":\"$.objectKey\",\"timestamp.$\":\"$.timestamp\"}}}}},{\"StartAt\":\"transcoding720\",\"States\":{\"transcoding720\":{\"End\":true,\"Retry\":[{\"ErrorEquals\":[\"Lambda.ClientExecutionTimeoutException\",\"Lambda.ServiceException\",\"Lambda.AWSLambdaException\",\"Lambda.SdkClientException\"],\"IntervalSeconds\":2,\"MaxAttempts\":6,\"BackoffRate\":2},{\"ErrorEquals\":[\"States.ALL\"],\"MaxAttempts\":3,\"BackoffRate\":2}],\"Type\":\"Task\",\"Resource\":\"arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":states:::lambda:invoke\",\"Parameters\":{\"FunctionName\":\"",
       {
        "Fn::GetAtt": [
         "transcodevideolambdaLambda131AAF32",
         "Arn"
        ]
       },
       "\",\"Payload\":{\"resolution\":\"720\",\"objectKey.$\":\"$.objectKey\",\"timestamp.$\":\"$.timestamp\"}}}}}]},\"publishSuccessfulTranscoding\":{\"End\":true,\"Type\":\"Task\",\"Resource\":\"arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":states:::sns:publish\",\"Parameters\":{\"TopicArn\":\"",
       {
        "Ref": "sourceUploadProcessingTopic119D2B2E"
       },
       "\",\"Message\":{\"success\":true,\"state\":\"transcoding\",\"objectKey.$\":\"$.[0].Payload.objectKey\"}}},\"publishFailedTranscoding\":{\"End\":true,\"Type\":\"Task\",\"Resource\":\"arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":states:::sns:publish\",\"Parameters\":{\"TopicArn\":\"",
       {
        "Ref": "sourceUploadProcessingTopic119D2B2E"
       },
       "\",\"Message\":{\"success\":false,\"state\":\"transcoding\",\"error.$\":\"$.errorInfo.Cause\"}}}}}"
      ]
     ]
    },
    "RoleArn": {
     "Fn::GetAtt": [
      "transcodingStateMachineRole3CDDD4E2",
      "Arn"
     ]
    }
   },
   "DependsOn": [
    "transcodingStateMachineRoleDefaultPolicy71D5302A",
    "transcodingStateMachineRole3CDDD4E2"
   ],
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "CloudMoviesStack/transcodingStateMachine/Resource"
   }
  },
  "starttranscodinglambdaLambdaServiceRole7F9B7DD2": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "CloudMoviesStack/starttranscodinglambdaLambda/ServiceRole/Resource"
   }
  },
  "starttranscodinglambdaLambdaServiceRoleDefaultPolicy246A74A0": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": "states:StartExecution",
       "Effect": "Allow",
       "Resource": {
        "Ref": "transcodingStateMachine0BE86125"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "starttranscodinglambdaLambdaServiceRoleDefaultPolicy246A74A0",
    "Roles": [
     {
      "Ref": "starttranscodinglambdaLambdaServiceRole7F9B7DD2"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "CloudMoviesStack/starttranscodinglambdaLambda/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "starttranscodinglambdaLambda5DD0E2FB": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     "S3Key": "8a9eb6941ec79e3885e48f7cd2a9c0cae3828b380683566cc6cd7a2c5fd308b3.zip"
    },
    "Environment": {
     "Variables": {
      "TRANSCODING_STATE_MACHINE": {
       "Ref": "transcodingStateMachine0BE86125"
      }
     }
    },
    "Handler": "start_transcoding.handler",
    "MemorySize": 128,
    "Role": {
     "Fn::GetAtt": [
      "starttranscodinglambdaLambdaServiceRole7F9B7DD2",
      "Arn"
     ]
    },
    "Runtime": "python3.9",
    "Timeout": 10
   },
   "DependsOn": [
    "starttranscodinglambdaLambdaServiceRoleDefaultPolicy246A74A0",
    "starttranscodinglambdaLambdaServiceRole7F9B7DD2"
   ],
   "Metadata": {
    "aws:cdk:path": "CloudMoviesStack/starttranscodinglambdaLambda/Resource",
    "aws:asset:path": "asset.8a9eb6941ec79e3885e48f7cd2a9c0cae3828b380683566cc6cd7a2c5fd308b3",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Code"
   }
  },
  "handleProcessingResultLambdaServiceRole1E231D03": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "CloudMoviesStack/handleProcessingResultLambda/ServiceRole/Resource"
   }
  },
  "handleProcessingResultLambdaServiceRoleDefaultPolicy9B5B03E7": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "s3:GetBucket*",
        "s3:GetObject*",
        "s3:List*"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "publishBucketBD758787",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "publishBucketBD758787",
             "Arn"
            ]
           },
           "/*"
          ]
         ]
        }
       ]
      },
      {
       "Action": "s3:DeleteObject*",
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "publishBucketBD758787",
             "Arn"
            ]
           },
           "/*"
          ]
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "sourceBucket5C83C9D6",
             "Arn"
            ]
           },
           "/*"
          ]
         ]
        }
       ]
      },
      {
       "Action": [
        "dynamodb:BatchGetItem",
        "dynamodb:BatchWriteItem",
        "dynamodb:ConditionCheckItem",
        "dynamodb:DeleteItem",
        "dynamodb:DescribeTable",
        "dynamodb:GetItem",
        "dynamodb:GetRecords",
        "dynamodb:GetShardIterator",
        "dynamodb:PutItem",
        "dynamodb:Query",
        "dynamodb:Scan",
        "dynamodb:UpdateItem"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "videosTableBCC40D2B",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "videosTableBCC40D2B",
             "Arn"
            ]
           },
           "/index/*"
          ]
         ]
        }
       ]
      },
      {
       "Action": "sns:Publish",
       "Effect": "Allow",
       "Resource": {
        "Ref": "videoPublishedTopic0F33FD9B"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "handleProcessingResultLambdaServiceRoleDefaultPolicy9B5B03E7",
    "Roles": [
     {
      "Ref": "handleProcessingResultLambdaServiceRole1E231D03"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "CloudMoviesStack/handleProcessingResultLambda/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "handleProcessingResultLambda73BFA016": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     "S3Key": "b68863b6caec5982eb261ba036e19c6f4d21d82832c4149475ab637f1e2acb17.zip"
    },
    "Environment": {
     "Variables": {
      "SOURCE_BUCKET": {
       "Ref": "sourceBucket5C83C9D6"
      },
      "PUBLISH_BUCKET": {
       "Ref": "publishBucketBD758787"
      },
      "VIDEOS_TABLE": {
       "Ref": "videosTableBCC40D2B"
      },
      "PUBLISHED_VIDEO_ARN": {
       "Ref": "videoPublishedTopic0F33FD9B"
      },
      "RESOLUTIONS": "360,480,720"
     }
    },
    "Handler": "handle_processing_result.handler",
    "MemorySize": 128,
    "Role": {
     "Fn::GetAtt": [
      "handleProcessingResultLambdaServiceRole1E231D03",
      "Arn"
     ]
    },
    "Runtime": "python3.9",
    "Timeout": 10
   },
   "DependsOn": [
    "handleProcessingResultLambdaServiceRoleDefaultPolicy9B5B03E7",
    "handleProcessingResultLambdaServiceRole1E231D03"
   ],
   "Metadata": {
    "aws:cdk:path": "CloudMoviesStack/handleProcessingResultLambda/Resource",
    "aws:asset:path": "asset.b68863b6caec5982eb261ba036e19c6f4d21d82832c4149475ab637f1e2acb17",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Code"
   }
  },
  "handleProcessingResultLambdaAllowInvokeCloudMoviesStacksourceUploadProcessingTopicC8A49003D232B7BD": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "handleProcessingResultLambda73BFA016",
      "Arn"
     ]
    },
    "Principal": "sns.amazonaws.com",
    "SourceArn": {
     "Ref": "sourceUploadProcessingTopic119D2B2E"
    }
   },
   "Metadata": {
    "aws:cdk:path": "CloudMoviesStack/handleProcessingResultLambda/AllowInvoke:CloudMoviesStacksourceUploadProcessingTopicC8A49003"
   }
  },
  "handleProcessingResultLambdasourceUploadProcessingTopicC7D3D1FB": {
   "Type": "AWS::SNS::Subscription",
   "Properties": {
    "Endpoint": {
     "Fn::GetAtt": [
      "handleProcessingResultLambda73BFA016",
      "Arn"
     ]
    },
    "Protocol": "lambda",
    "TopicArn": {
     "Ref": "sourceUploadProcessingTopic119D2B2E"
    }
   },
   "Metadata": {
    "aws:cdk:path": "CloudMoviesStack/handleProcessingResultLambda/sourceUploadProcessingTopic/Resource"
   }
  },
  "notifySubscribersLambdaServiceRole18CA8BD6": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "CloudMoviesStack/notifySubscribersLambda/ServiceRole/Resource"
   }
  },
  "notifySubscribersLambdaServiceRoleDefaultPolicy053ACCC4": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "dynamodb:BatchGetItem",
        "dynamodb:ConditionCheckItem",
        "dynamodb:DescribeTable",
        "dynamodb:GetItem",
        "dynamodb:GetRecords",
        "dynamodb:GetShardIterator",
        "dynamodb:Query",
        "dynamodb:Scan"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "subscriptionsTable99FE4D04",
          "Arn"
         ]
        },
        {
         "Ref": "AWS::NoValue"
        }
       ]
      },
      {
       "Action": "sns:*",
       "Effect": "Allow",
       "Resource": {
        "Fn::GetAtt": [
         "moviesUserPool80190EBD",
         "Arn"
        ]
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "notifySubscribersLambdaServiceRoleDefaultPolicy053ACCC4",
    "Roles": [
     {
      "Ref": "notifySubscribersLambdaServiceRole18CA8BD6"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "CloudMoviesStack/notifySubscribersLambda/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "notifySubscribersLambda728C006F": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     "S3Key": "da158df24bb6c9405d4111ece36d080911e79b6792812ec381cbdae34268e636.zip"
    },
    "Environment": {
     "Variables": {
      "SUBSCRIPTIONS_TABLE": {
       "Ref": "subscriptionsTable99FE4D04"
      }
     }
    },
    "Handler": "notify_subscribers.handler",
    "MemorySize": 128,
    "Role": {
     "Fn::GetAtt": [
      "notifySubscribersLambdaServiceRole18CA8BD6",
      "Arn"
     ]
    },
    "Runtime": "python3.9",
    "Timeout": 10
   },
   "DependsOn": [
    "notifySubscribersLambdaServiceRoleDefaultPolicy053ACCC4",
    "notifySubscribersLambdaServiceRole18CA8BD6"
   ],
   "Metadata": {
    "aws:cdk:path": "CloudMoviesStack/notifySubscribersLambda/Resource",
    "aws:asset:path": "asset.da158df24bb6c9405d4111ece36d080911e79b6792812ec381cbdae34268e636",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Code"
   }
  },
  "notifySubscribersLambdaAllowInvokeCloudMoviesStackvideoPublishedTopic42F971A2EBF9B1B8": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "notifySubscribersLambda728C006F",
      "Arn"
     ]
    },
    "Principal": "sns.amazonaws.com",
    "SourceArn": {
     "Ref": "videoPublishedTopic0F33FD9B"
    }
   },
   "Metadata": {
    "aws:cdk:path": "CloudMoviesStack/notifySubscribersLambda/AllowInvoke:CloudMoviesStackvideoPublishedTopic42F971A2"
   }
  },
  "notifySubscribersLambdavideoPublishedTopic8744DE0B": {
   "Type": "AWS::SNS::Subscription",
   "Properties": {
    "Endpoint": {
     "Fn::GetAtt": [
      "notifySubscribersLambda728C006F",
      "Arn"
     ]
    },
    "Protocol": "lambda",
    "TopicArn": {
     "Ref": "videoPublishedTopic0F33FD9B"
    }
   },
   "Metadata": {
    "aws:cdk:path": "CloudMoviesStack/notifySubscribersLambda/videoPublishedTopic/Resource"
   }
  },
  "createUserFeedLambdaServiceRoleE1A60815": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "CloudMoviesStack/createUserFeedLambda/ServiceRole/Resource"
   }
  },
  "createUserFeedLambdaServiceRoleDefaultPolicy0E6F2890": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "dynamodb:BatchWriteItem",
        "dynamodb:DeleteItem",
        "dynamodb:DescribeTable",
        "dynamodb:PutItem",
        "dynamodb:UpdateItem"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "feedsTable2B322F8D",
          "Arn"
         ]
        },
        {
         "Ref": "AWS::NoValue"
        }
       ]
      },
      {
       "Action": [
        "dynamodb:BatchGetItem",
        "dynamodb:ConditionCheckItem",
        "dynamodb:DescribeTable",
        "dynamodb:GetItem",
        "dynamodb:GetRecords",
        "dynamodb:GetShardIterator",
        "dynamodb:Query",
        "dynamodb:Scan"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "videosTableBCC40D2B",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "videosTableBCC40D2B",
             "Arn"
            ]
           },
           "/index/*"
          ]
         ]
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "createUserFeedLambdaServiceRoleDefaultPolicy0E6F2890",
    "Roles": [
     {
      "Ref": "createUserFeedLambdaServiceRoleE1A60815"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "CloudMoviesStack/createUserFeedLambda/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "createUserFeedLambdaD7C2905C": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     "S3Key": "858d4a725bf043233d66c73c2557bb75c5ea8338c14a66340f38d7be77149f82.zip"
    },
    "Environment": {
     "Variables": {
      "FEEDS_TABLE": {
       "Ref": "feedsTable2B322F8D"
      },
      "VIDEOS_TABLE": {
       "Ref": "videosTableBCC40D2B"
      }
     }
    },
    "Handler": "create_user_feed.handler",
    "MemorySize": 128,
    "Role": {
     "Fn::GetAtt": [
      "createUserFeedLambdaServiceRoleE1A60815",
      "Arn"
     ]
    },
    "Runtime": "python3.9",
    "Timeout": 10
   },
   "DependsOn": [
    "createUserFeedLambdaServiceRoleDefaultPolicy0E6F2890",
    "createUserFeedLambdaServiceRoleE1A60815"
   ],
   "Metadata": {
    "aws:cdk:path": "CloudMoviesStack/createUserFeedLambda/Resource",
    "aws:asset:path": "asset.858d4a725bf043233d66c73c2557bb75c5ea8338c14a66340f38d7be77149f82",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Code"
   }
  },
  "createUserFeedLambdaAllowInvokeCloudMoviesStackregisterConfirmationTopic946C1E0BE21F71E7": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "createUserFeedLambdaD7C2905C",
      "Arn"
     ]
    },
    "Principal": "sns.amazonaws.com",
    "SourceArn": {
     "Ref": "registerConfirmationTopicEB93F8F5"
    }
   },
   "Metadata": {
    "aws:cdk:path": "CloudMoviesStack/createUserFeedLambda/AllowInvoke:CloudMoviesStackregisterConfirmationTopic946C1E0B"
   }
  },
  "createUserFeedLambdaregisterConfirmationTopicC8ECE8EB": {
   "Type": "AWS::SNS::Subscription",
   "Properties": {
    "Endpoint": {
     "Fn::GetAtt": [
      "createUserFeedLambdaD7C2905C",
      "Arn"
     ]
    },
    "Protocol": "lambda",
    "TopicArn": {
     "Ref": "registerConfirmationTopicEB93F8F5"
    }
   },
   "Metadata": {
    "aws:cdk:path": "CloudMoviesStack/createUserFeedLambda/registerConfirmationTopic/Resource"
   }
  },
  "userUpdateFeedLambdaServiceRole15CF3A26": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "CloudMoviesStack/userUpdateFeedLambda/ServiceRole/Resource"
   }
  },
  "userUpdateFeedLambdaServiceRoleDefaultPolicy08B4A744": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "dynamodb:BatchGetItem",
        "dynamodb:ConditionCheckItem",
        "dynamodb:DescribeTable",
        "dynamodb:GetItem",
        "dynamodb:GetRecords",
        "dynamodb:GetShardIterator",
        "dynamodb:Query",
        "dynamodb:Scan"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "videosTableBCC40D2B",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "videosTableBCC40D2B",
             "Arn"
            ]
           },
           "/index/*"
          ]
         ]
        }
       ]
      },
      {
       "Action": [
        "dynamodb:BatchGetItem",
        "dynamodb:BatchWriteItem",
        "dynamodb:ConditionCheckItem",
        "dynamodb:DeleteItem",
        "dynamodb:DescribeTable",
        "dynamodb:GetItem",
        "dynamodb:GetRecords",
        "dynamodb:GetShardIterator",
        "dynamodb:PutItem",
        "dynamodb:Query",
        "dynamodb:Scan",
        "dynamodb:UpdateItem"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "feedsTable2B322F8D",
          "Arn"
         ]
        },
        {
         "Ref": "AWS::NoValue"
        }
       ]
      },
      {
       "Action": [
        "sqs:ChangeMessageVisibility",
        "sqs:DeleteMessage",
        "sqs:GetQueueAttributes",
        "sqs:GetQueueUrl",
        "sqs:ReceiveMessage"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::GetAtt": [
         "userEventFeedQueue35797794",
         "Arn"
        ]
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "userUpdateFeedLambdaServiceRoleDefaultPolicy08B4A744",
    "Roles": [
     {
      "Ref": "userUpdateFeedLambdaServiceRole15CF3A26"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "CloudMoviesStack/userUpdateFeedLambda/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "userUpdateFeedLambdaCA6766D6": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     "S3Key": "9af795cb2a4bed5008addb92431c2d0a2e9b645c426f99c19f88be50649939d6.zip"
    },
    "Environment": {
     "Variables": {
      "VIDEOS_TABLE": {
       "Ref": "videosTableBCC40D2B"
      },
      "FEEDS_TABLE": {
       "Ref": "feedsTable2B322F8D"
      }
     }
    },
    "Handler": "user_update_feed.handler",
    "MemorySize": 128,
    "Role": {
     "Fn::GetAtt": [
      "userUpdateFeedLambdaServiceRole15CF3A26",
      "Arn"
     ]
    },
    "Runtime": "python3.9",
    "Timeout": 10
   },
   "DependsOn": [
    "userUpdateFeedLambdaServiceRoleDefaultPolicy08B4A744",
    "userUpdateFeedLambdaServiceRole15CF3A26"
   ],
   "Metadata": {
    "aws:cdk:path": "CloudMoviesStack/userUpdateFeedLambda/Resource",
    "aws:asset:path": "asset.9af795cb2a4bed5008addb92431c2d0a2e9b645c426f99c19f88be50649939d6",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Code"
   }
  },
  "userUpdateFeedLambdauserEventFeedSource18724A26": {
   "Type": "AWS::Lambda::EventSourceMapping",
   "Properties": {
    "BatchSize": 1,
    "EventSourceArn": {
     "Fn::GetAtt": [
      "userEventFeedQueue35797794",
      "Arn"
     ]
    },
    "FunctionName": {
     "Ref": "userUpdateFeedLambdaCA6766D6"
    }
   },
   "Metadata": {
    "aws:cdk:path": "CloudMoviesStack/userUpdateFeedLambda/userEventFeedSource/Resource"
   }
  },
  "publishUpdateFeedLambdaServiceRole63A4A808": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "CloudMoviesStack/publishUpdateFeedLambda/ServiceRole/Resource"
   }
  },
  "publishUpdateFeedLambdaServiceRoleDefaultPolicyF1CE9110": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "dynamodb:BatchGetItem",
        "dynamodb:ConditionCheckItem",
        "dynamodb:DescribeTable",
        "dynamodb:GetItem",
        "dynamodb:GetRecords",
        "dynamodb:GetShardIterator",
        "dynamodb:Query",
        "dynamodb:Scan"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "ratingTable2AEECFA5",
          "Arn"
         ]
        },
        {
         "Fn::GetAtt": [
          "subscriptionsTable99FE4D04",
          "Arn"
         ]
        },
        {
         "Fn::GetAtt": [
          "videosTableBCC40D2B",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "videosTableBCC40D2B",
             "Arn"
            ]
           },
           "/index/*"
          ]
         ]
        },
        {
         "Ref": "AWS::NoValue"
        }
       ]
      },
      {
       "Action": [
        "dynamodb:BatchGetItem",
        "dynamodb:BatchWriteItem",
        "dynamodb:ConditionCheckItem",
        "dynamodb:DeleteItem",
        "dynamodb:DescribeTable",
        "dynamodb:GetItem",
        "dynamodb:GetRecords",
        "dynamodb:GetShardIterator",
        "dynamodb:PutItem",
        "dynamodb:Query",
        "dynamodb:Scan",
        "dynamodb:UpdateItem"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "feedsTable2B322F8D",
          "Arn"
         ]
        },
        {
         "Ref": "AWS::NoValue"
        }
       ]
      },
      {
       "Action": [
        "sqs:ChangeMessageVisibility",
        "sqs:DeleteMessage",
        "sqs:GetQueueAttributes",
        "sqs:GetQueueUrl",
        "sqs:ReceiveMessage"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::GetAtt": [
         "publishEventFeedQueueF16A58E7",
         "Arn"
        ]
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "publishUpdateFeedLambdaServiceRoleDefaultPolicyF1CE9110",
    "Roles": [
     {
      "Ref": "publishUpdateFeedLambdaServiceRole63A4A808"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "CloudMoviesStack/publishUpdateFeedLambda/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "publishUpdateFeedLambda0D7129F3": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     "S3Key": "15d9d28ceed4b74d3bfc31b1c6e5a693ff653646c80b4d3d0ca5b8e577512954.zip"
    },
    "Environment": {
     "Variables": {
      "VIDEOS_TABLE": {
       "Ref": "videosTableBCC40D2B"
      },
      "SUBSCRIPTIONS_TABLE": {
       "Ref": "subscriptionsTable99FE4D04"
      },
      "RATINGS_TABLE": {
       "Ref": "ratingTable2AEECFA5"
      },
      "FEEDS_TABLE": {
       "Ref": "feedsTable2B322F8D"
      }
     }
    },
    "Handler": "publish_update_feed.handler",
    "MemorySize": 128,
    "Role": {
     "Fn::GetAtt": [
      "publishUpdateFeedLambdaServiceRole63A4A808",
      "Arn"
     ]
    },
    "Runtime": "python3.9",
    "Timeout": 10
   },
   "DependsOn": [
    "publishUpdateFeedLambdaServiceRoleDefaultPolicyF1CE9110",
    "publishUpdateFeedLambdaServiceRole63A4A808"
   ],
   "Metadata": {
    "aws:cdk:path": "CloudMoviesStack/publishUpdateFeedLambda/Resource",
    "aws:asset:path": "asset.15d9d28ceed4b74d3bfc31b1c6e5a693ff653646c80b4d3d0ca5b8e577512954",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Code"
   }
  },
  "publishUpdateFeedLambdapublishEventFeedSourceC6CF1A54": {
   "Type": "AWS::Lambda::EventSourceMapping",
   "Properties": {
    "BatchSize": 1,
    "EventSourceArn": {
     "Fn::GetAtt": [
      "publishEventFeedQueueF16A58E7",
      "Arn"
     ]
    },
    "FunctionName": {
     "Ref": "publishUpdateFeedLambda0D7129F3"
    }
   },
   "Metadata": {
    "aws:cdk:path": "CloudMoviesStack/publishUpdateFeedLambda/publishEventFeedSource/Resource"
   }
  },
  "videosFeedPipeRoleBC0EBD5F": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "pipes.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "Policies": [
     {
      "PolicyDocument": {
       "Statement": [
        {
         "Action": [
          "dynamodb:DescribeStream",
          "dynamodb:GetRecords",
          "dynamodb:GetShardIterator",
          "dynamodb:ListStreams"
         ],
         "Effect": "Allow",
         "Resource": {
          "Fn::GetAtt": [
           "videosTableBCC40D2B",
           "StreamArn"
          ]
         }
        }
       ],
       "Version": "2012-10-17"
      },
      "PolicyName": "PipeSourcePolicy"
     },
     {
      "PolicyDocument": {
       "Statement": [
        {
         "Action": "sqs:SendMessage",
         "Effect": "Allow",
         "Resource": {
          "Fn::GetAtt": [
           "publishEventFeedQueueF16A58E7",
           "Arn"
          ]
         }
        }
       ],
       "Version": "2012-10-17"
      },
      "PolicyName": "PipeTargetPolicy"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "CloudMoviesStack/videosFeedPipeRole/Resource"
   }
  },
  "videosFeedPipe": {
   "Type": "AWS::Pipes::Pipe",
   "Properties": {
    "RoleArn": {
     "Fn::GetAtt": [
      "videosFeedPipeRoleBC0EBD5F",
      "Arn"
     ]
    },
    "Source": {
     "Fn::GetAtt": [
      "videosTableBCC40D2B",
      "StreamArn"
     ]
    },
    "SourceParameters": {
     "DynamoDBStreamParameters": {
      "StartingPosition": "LATEST"
     },
     "FilterCriteria": {
      "Filters": [
       {
        "Pattern": "{\"eventName\": [\"MODIFY\"], \"dynamodb\": {\"NewImage\": {\"videoType\": {\"S\": [\"MOVIE\", \"SHOW\"]}}}}"
       }
      ]
     }
    },
    "Target": {
     "Fn::GetAtt": [
      "publishEventFeedQueueF16A58E7",
      "Arn"
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "CloudMoviesStack/videosFeedPipe"
   }
  },
  "subscriptionsFeedPipeRole2D8B4D76": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "pipes.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "Policies": [
     {
      "PolicyDocument": {
       "Statement": [
        {
         "Action": [
          "dynamodb:DescribeStream",
          "dynamodb:GetRecords",
          "dynamodb:GetShardIterator",
          "dynamodb:ListStreams"
         ],
         "Effect": "Allow",
         "Resource": {
          "Fn::GetAtt": [
           "subscriptionsTable99FE4D04",
           "StreamArn"
          ]
         }
        }
       ],
       "Version": "2012-10-17"
      },
      "PolicyName": "PipeSourcePolicy"
     },
     {
      "PolicyDocument": {
       "Statement": [
        {
         "Action": "sqs:SendMessage",
         "Effect": "Allow",
         "Resource": {
          "Fn::GetAtt": [
           "userEventFeedQueue35797794",
           "Arn"
          ]
         }
        }
       ],
       "Version": "2012-10-17"
      },
      "PolicyName": "PipeTargetPolicy"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "CloudMoviesStack/subscriptionsFeedPipeRole/Resource"
   }
  },
  "subscriptionsFeedPipe": {
   "Type": "AWS::Pipes::Pipe",
   "Properties": {
    "RoleArn": {
     "Fn::GetAtt": [
      "subscriptionsFeedPipeRole2D8B4D76",
      "Arn"
     ]
    },
    "Source": {
     "Fn::GetAtt": [
      "subscriptionsTable99FE4D04",
      "StreamArn"
     ]
    },
    "SourceParameters": {
     "DynamoDBStreamParameters": {
      "StartingPosition": "LATEST"
     },
     "FilterCriteria": {
      "Filters": [
       {
        "Pattern": "{\"eventName\": [\"INSERT\", \"REMOVE\"]}"
       }
      ]
     }
    },
    "Target": {
     "Fn::GetAtt": [
      "userEventFeedQueue35797794",
      "Arn"
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "CloudMoviesStack/subscriptionsFeedPipe"
   }
  },
  "ratingsFeedPipeRole54FCC01D": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "pipes.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "Policies": [
     {
      "PolicyDocument": {
       "Statement": [
        {
         "Action": [
          "dynamodb:DescribeStream",
          "dynamodb:GetRecords",
          "dynamodb:GetShardIterator",
          "dynamodb:ListStreams"
         ],
         "Effect": "Allow",
         "Resource": {
          "Fn::GetAtt": [
           "ratingTable2AEECFA5",
           "StreamArn"
          ]
         }
        }
       ],
       "Version": "2012-10-17"
      },
      "PolicyName": "PipeSourcePolicy"
     },
     {
      "PolicyDocument": {
       "Statement": [
        {
         "Action": "sqs:SendMessage",
         "Effect": "Allow",
         "Resource": {
          "Fn::GetAtt": [
           "userEventFeedQueue35797794",
           "Arn"
          ]
         }
        }
       ],
       "Version": "2012-10-17"
      },
      "PolicyName": "PipeTargetPolicy"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "CloudMoviesStack/ratingsFeedPipeRole/Resource"
   }
  },
  "ratingsFeedPipe": {
   "Type": "AWS::Pipes::Pipe",
   "Properties": {
    "RoleArn": {
     "Fn::GetAtt": [
      "ratingsFeedPipeRole54FCC01D",
      "Arn"
     ]
    },
    "Source": {
     "Fn::GetAtt": [
      "ratingTable2AEECFA5",
      "StreamArn"
     ]
    },
    "SourceParameters": {
     "DynamoDBStreamParameters": {
      "StartingPosition": "LATEST"
     },
     "FilterCriteria": {
      "Filters": [
       {
        "Pattern": "{\"eventName\": [\"INSERT\", \"MODIFY\", \"REMOVE\"]}"
       }
      ]
     }
    },
    "Target": {
     "Fn::GetAtt": [
      "userEventFeedQueue35797794",
      "Arn"
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "CloudMoviesStack/ratingsFeedPipe"
   }
  },
  "CDKMetadata": {
   "Type": "AWS::CDK::Metadata",
   "Properties": {
    "Analytics": "v2:deflate64:H4sIAAAAAAAA/21T23LbIBD9Fr9jEjv9gDpO2ulMPFVtt6+ZlbS2qBBQFuxRGf17B4RtJekLe87usldY8sWnJQ+LGZxpXtXtXIqSh52DqmVwptdQ9wo6XZc87KGUyNYHlcDA6IGHR1+16KIyo1EUWoqqv6kzH8kjEA5MQlfWwMP6oAq0nSASWsUbL9Cj/YU28S9eVS4brviNx/MJldtpbyvcgDFCHaPvR+3A6A/x8MOjT02MIJ23aid0YKSIh50vqbLCXIp4w/faiCpNJII4kVcgQkd8FQUT0PGw1ePUkrylumSp9FEJp3n4SWgLrWU0XvEFPOkOhJqasuZC11KgclOHj5qvVnszMDDiCA7P0POw1y2qlXeNtuIv2ug9YVsktzIiVZ/hExqp+y5HnrCdg2PqcwRbpDT9uGy2QdfoOhozulhz5IQHRg7NIS+ZeCjAgpQoY2iHG6gaoS4ZrvzdrVcH1BIPL+l1fVMn3SLbKSp8KQU1AzPCIPE4f2FwmBTiyenuf3W9MxVWn0SNNjWW1hwbzs/uu3fGp8mstapFLGlgizlI0wC/n33On+wuyvEDzE3vGq2yS5HI9H0PbNTdPfDFkt/PfpMQc+uVEx3y7Sj/AdWBsz7EAwAA"
   },
   "Metadata": {
    "aws:cdk:path": "CloudMoviesStack/CDKMetadata/Default"
   },
   "Condition": "CDKMetadataAvailable"
  }
 },
 "Outputs": {
  "UserPoolId": {
   "Value": {
    "Ref": "moviesUserPool80190EBD"
   }
  },
  "UserPoolClientId": {
   "Value": {
    "Ref": "moviesUserPoolmoviesclientBBEF7921"
   }
  },
  "UserPoolDomain": {
   "Value": {
    "Ref": "moviesUserPoolCognitoDomain3397781E"
   }
  },
  "moviesApiEndpointAF647101": {
   "Value": {
    "Fn::Join": [
     "",
     [
      "https://",
      {
       "Ref": "moviesApi63300285"
      },
      ".execute-api.",
      {
       "Ref": "AWS::Region"
      },
      ".",
      {
       "Ref": "AWS::URLSuffix"
      },
      "/",
      {
       "Ref": "moviesApiDeploymentStageprod986CD890"
      },
      "/"
     ]
    ]
   }
  }
 },
 "Conditions": {
  "CDKMetadataAvailable": {
   "Fn::Or": [
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "af-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-northeast-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-northeast-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-southeast-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-southeast-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ca-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "cn-north-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "cn-northwest-1"
       ]
      }
     ]
    },
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-north-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-3"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "il-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "me-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "me-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "sa-east-1"
       ]
      }
     ]
    },
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-east-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-west-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-west-2"
       ]
      }
     ]
    }
   ]
  }
 },
 "Parameters": {
  "BootstrapVersion": {
   "Type": "AWS::SSM::Parameter::Value<String>",
   "Default": "/cdk-bootstrap/hnb659fds/version",
   "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]"
  }
 },
 "Rules": {
  "CheckBootstrapVersion": {
   "Assertions": [
    {
     "Assert": {
      "Fn::Not": [
       {
        "Fn::Contains": [
         [
          "1",
          "2",
          "3",
          "4",
          "5"
         ],
         {
          "Ref": "BootstrapVersion"
         }
        ]
       }
      ]
     },
     "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI."
    }
   ]
  }
 }
}